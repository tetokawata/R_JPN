[["index.html", "Rによる比較・予測・因果推論入門 ver0.1 はじめに", " Rによる比較・予測・因果推論入門 ver0.1 川田恵介 2021-09-24 はじめに 定量的な比較、（反実仮想）因果推定、予測分析をRによって行う方法を紹介 経済学におけるデータ分析の大部分は、複数の変数間での関係性の理解・利用を目的としている。 本ページでは、ある結果変数\\(Y\\)と独立変数（群）\\(X=X_1,...,X_L\\)の関係性に焦点を当てる。 また\\(Y\\)と\\(X\\)がともに観察でき、関心のある母集団からランダムサンプリングされたデータが入手出来ている。 具体的な分析目標を大きく（予測）\\(Y\\)の予測関数の推定、（比較）異なる\\(X\\)間での\\(Y\\)の比較、（因果効果）\\(X\\)の変化が\\(Y\\)に与える因果効果の推定、に大別し、それぞれについて簡単な説明とRのサンプルコードの提供 データインポート、整理、可視化を行う関数群を統合的に提供するtidyverseパッケージ (Wickham et al. 2019)の利用 Example dataとしては、AERパッケージ (Kleiber and Zeileis 2008)に含まれるNMES1988(the US National Medical Expenditure Survey)を利用 References "],["intro.html", "Chapter 1 準備 1.1 tidyverse 1.2 nativeなpipe演算子", " Chapter 1 準備 本ページでは、tidyverseパッケージの利用を前提とし、pipe演算子を用いたコード例を示す 1.1 tidyverse データ整備・可視化等の関数群を提供する（メタ）パッケージ 公式ページ 1.2 nativeなpipe演算子 R version 4.1からpipe演算子が、追加パッケージなしで利用可能になった Tools -&gt; Global option -&gt; Code -&gt; “Use native pipe operator” をチェックする Ctr + Shift + mがショートカット 現状、magrittrパッケージが提供するpipe (%&gt;%)に比べて、機能が限定されている pipe演算子：二つの入力X1,X2から出力Yを得る関数fについて、pipe演算子を用いると、Y &lt;- X1 |&gt; f(X2)と書き換えられる pipe演算子を使わない場合、ある出力結果を入力として用いるためには、複数のobjectを作成する必要があり煩雑 n &lt;- rnorm(100) # 標準正規分布から100個値を取得し、nと名付ける hist(n) # nを用いてヒストグラムを描画 pipe演算子を使うと以下のようになる rnorm(100) |&gt; hist() "],["データ整備.html", "Chapter 2 データ整備 2.1 パッケージ &amp; データ 2.2 新しい変数の作成 2.3 変数の限定 2.4 サンプルの除外 2.5 記述統計表の作成", " Chapter 2 データ整備 Chapter 2.2-2.4 : tidyverseに同梱されるdplyrパッケージに含まれる関数を用いた、データの加工法を紹介 Chapter 2.5 : gtsummaryパッケージ(Sjoberg et al. 2021)を用いた記述統計表を作成 2.1 パッケージ &amp; データ library(tidyverse) # データ整備 library(AER) # Example データ library(gtsummary) # 記述統計量 data(&quot;NMES1988&quot;) ## データの取得 raw &lt;- NMES1988 ## rawという名前に変更 2.2 新しい変数の作成 mutate関数の利用 df &lt;- raw |&gt; mutate(age_2 = age^2) # 年齢の二乗項を作成 2.3 変数の限定 select関数の利用 df &lt;- raw |&gt; select(age, income) 特定の変数の除外 df &lt;- raw |&gt; select(-age, -income) 2.4 サンプルの除外 filter関数の利用 df &lt;- raw |&gt; filter(visits &gt;= 7) 2.5 記述統計表の作成 記述統計の作成には多くの有益なパッケージが存在 ここではgtsummaryを使用 select関数で必要な変数(visits, health, medicaid)を抜き出し、insuranceごとに連続変数については中央値、カテゴリ変数については頻度を記述 raw |&gt; # rawを入力とし select(visits, health, medicaid, insurance ) |&gt; # 必要な変数を抜き出す tbl_summary(by = insurance) # 記述統計を計算 html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #nuaqctould .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #nuaqctould .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nuaqctould .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #nuaqctould .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #nuaqctould .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nuaqctould .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nuaqctould .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #nuaqctould .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #nuaqctould .gt_column_spanner_outer:first-child { padding-left: 0; } #nuaqctould .gt_column_spanner_outer:last-child { padding-right: 0; } #nuaqctould .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #nuaqctould .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #nuaqctould .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #nuaqctould .gt_from_md > :first-child { margin-top: 0; } #nuaqctould .gt_from_md > :last-child { margin-bottom: 0; } #nuaqctould .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #nuaqctould .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #nuaqctould .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nuaqctould .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #nuaqctould .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nuaqctould .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #nuaqctould .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #nuaqctould .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nuaqctould .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nuaqctould .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #nuaqctould .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nuaqctould .gt_sourcenote { font-size: 90%; padding: 4px; } #nuaqctould .gt_left { text-align: left; } #nuaqctould .gt_center { text-align: center; } #nuaqctould .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #nuaqctould .gt_font_normal { font-weight: normal; } #nuaqctould .gt_font_bold { font-weight: bold; } #nuaqctould .gt_font_italic { font-style: italic; } #nuaqctould .gt_super { font-size: 65%; } #nuaqctould .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Characteristic no, N = 9851 yes, N = 3,4211 visits 3 (1, 7) 4 (2, 8) health poor 204 (21%) 350 (10%) average 721 (73%) 2,788 (81%) excellent 60 (6.1%) 283 (8.3%) medicaid 341 (35%) 61 (1.8%) 1 Median (IQR); n (%) 連続変数について、平均値と標準偏差を記述 raw |&gt; select(visits, health, medicaid, insurance ) |&gt; tbl_summary(by = insurance, statistic = list(all_continuous() ~ &quot;{mean} ({sd})&quot;) # 平均と標準誤差を表示 ) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #eyvavsmegb .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #eyvavsmegb .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #eyvavsmegb .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #eyvavsmegb .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #eyvavsmegb .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #eyvavsmegb .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #eyvavsmegb .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #eyvavsmegb .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #eyvavsmegb .gt_column_spanner_outer:first-child { padding-left: 0; } #eyvavsmegb .gt_column_spanner_outer:last-child { padding-right: 0; } #eyvavsmegb .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #eyvavsmegb .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #eyvavsmegb .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #eyvavsmegb .gt_from_md > :first-child { margin-top: 0; } #eyvavsmegb .gt_from_md > :last-child { margin-bottom: 0; } #eyvavsmegb .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #eyvavsmegb .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #eyvavsmegb .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #eyvavsmegb .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #eyvavsmegb .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #eyvavsmegb .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #eyvavsmegb .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #eyvavsmegb .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #eyvavsmegb .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #eyvavsmegb .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #eyvavsmegb .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #eyvavsmegb .gt_sourcenote { font-size: 90%; padding: 4px; } #eyvavsmegb .gt_left { text-align: left; } #eyvavsmegb .gt_center { text-align: center; } #eyvavsmegb .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #eyvavsmegb .gt_font_normal { font-weight: normal; } #eyvavsmegb .gt_font_bold { font-weight: bold; } #eyvavsmegb .gt_font_italic { font-style: italic; } #eyvavsmegb .gt_super { font-size: 65%; } #eyvavsmegb .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Characteristic no, N = 9851 yes, N = 3,4211 visits 5 (6) 6 (7) health poor 204 (21%) 350 (10%) average 721 (73%) 2,788 (81%) excellent 60 (6.1%) 283 (8.3%) medicaid 341 (35%) 61 (1.8%) 1 Mean (SD); n (%) References "],["可視化.html", "Chapter 3 可視化 3.1 パッケージ &amp; データ 3.2 連続-カテゴリのケース 3.3 連続-連続のケース", " Chapter 3 可視化 議論の出発点として、データ内におけるY/X間の関係性を整理・記述することが重要 最有力な手法は可視化 tidyverseに含まれるggplot2パッケージ(Wickham et al. 2021)を利用し、可視化 Chapter 3.2 : Yが連続変数、Xがカテゴリー変数のケースについて有効なヒストグラム、密度関数、boxplotを描写 Chapter 3.3 :Xも連続変数のケースについて有効な散布図、ヒートマップを描写 3.1 パッケージ &amp; データ library(tidyverse) # 可視化 library(AER) # 例データ data(&quot;NMES1988&quot;) # データの取り込み raw &lt;- NMES1988 # 名前変更 変数のタイプに応じて、変数間の関係性を記述するために有効な図は異なる。 ここでは、Y/Xが共に連続(連続-連続)のケース、Xがカテゴリカル(連続-カテゴリ)なケースについて、代表的な図を紹介する 3.2 連続-カテゴリのケース 3.2.1 ヒストグラム 医療機関の利用回数 raw |&gt; ggplot(aes(x = visits)) + geom_histogram() 保険の有無別 raw |&gt; ggplot(aes(x = visits, fill = insurance) ) + geom_histogram(position = &quot;identity&quot;, alpha = 0.5) 3.2.2 密度 保険の有無別分布 raw |&gt; ggplot(aes(x = visits, fill = insurance) ) + geom_density(position = &quot;identity&quot;, alpha = 0.5) 3.2.3 Boxplot raw |&gt; ggplot(aes(y = visits, x = insurance) ) + geom_boxplot() 3.3 連続-連続のケース 3.3.1 散布図 散布図：連続変数間の関係性を可視化する図 raw |&gt; ggplot(aes(x = age, y = visits) ) + geom_point() サンプルサイズが大きくなると機能しない 3.3.2 ヒートマップ 代替案はヒートマップ raw |&gt; ggplot(aes(x = age, y = visits) ) + geom_bin2d() References "],["prediction.html", "Chapter 4 予測 4.1 問題設定 4.2 パッケージ &amp; データ 4.3 事前準備 4.4 OLS 4.5 LASSO 4.6 Ridge 4.7 Tree 4.8 Random Forest 4.9 Stacking", " Chapter 4 予測 データと同じ母集団から新しくランダムサンプリングされ、\\(X\\)のみが観察できるサンプルについて\\(Y\\)の値を予測する。 データ分割を用いたモデル評価を行う Chapter 4.1 : 予測問題の論点を紹介 Chapter 4.3 : データ分割 Chapter 4.4 : 線形モデルをOLSで推定する手法を紹介 Chapter 4.5-4.6 : 線形モデルを罰則付き回帰(LASSO, Ridge)で推定する手法を紹介 Chapter 4.7 : 予測木モデルを推定する手法を紹介 Chapter 4.8 : 予測木モデルをモデル平均加法(Bagging, Random Forest)で推定する手法を紹介 4.1 問題設定 事前に定義する損失関数の期待値を最小化するような、予測関数\\(f(X)\\)の推定を目指す。 本ページではMean squared error(MSE)を損失関数として用いるケースを紹介する。所与の\\(f(X)\\)、母分布に従う確率変数\\(Y,X\\)についてMSEは以下のように定義される。 \\[MSE = E_{X,Y}[(Y_i-f(X_i))^2]\\] 一般にMSEは以下のように書き換えられる。 \\[MSE = \\underbrace{E_{X,Y}[(Y_i-\\bar{Y}(X_i))^2]}_{Irreducible\\ error}+\\underbrace{E_{X,Y}[(\\bar{Y}(X_i)-f(X_i))^2]}_{Reducible\\ error}\\] ただし\\(\\bar{Y}(X_i)=E[Y_i|X_i]\\)。 上記式から以下が確認できる。 最善の予測関数 \\(\\iff\\) Reducible error \\(=0\\) \\(\\iff\\) 条件付き母平均\\(\\bar{Y}(X_i)\\) 最善の予測関数のもとでも削減不可能なエラー(Irreducible error)が存在 予測関数の推定 \\(=\\) Reducible errorの削減 \\(=\\) 条件付き母平均との乖離(MSE)の削減 4.1.1 Bias-Variance tradeoff 実際の\\(f(X_i)\\)はランダムサンプリングされたデータから推定される。このためデータの入手前の段階では、確率分布を持つ。 Reducible errorは一般に以下のように書き換えられます。 \\[E_{Y,X,f(X)}[(\\bar{Y}(X_i)-f(X_i))^2]\\] \\[=\\underbrace{(E_{Y,X,f(X)}[\\bar{Y}(X_i)-\\bar{f}(X_i)])^2}_{Bias}+\\underbrace{E_{Y,X,f(X)}[(\\bar{f}(X_i)-f(X_i))^2]}_{Variance}.\\] ただし\\(\\bar{f}(X_i)=f(X_i)\\)。 上記式は推定される予測関数が平均的にどの程度条件付き母平均を近似できているのか(Biasがどの程度小さいのか)だけでなく、予測関数の分布がどの程度散らばっているのか、についても考慮する必要性を示す。 母平均\\(\\bar Y(X_i)\\)が単純な既知の関数形に従い、かつサンプルサイズが大きい場合、OLS推定された\\(f(X_i)\\)は\\(Bias=0\\)かつ小さなVarianceを達成する。 しかしながら社会科学における多くの応用においては、\\(\\bar Y(X_i)\\)は未知かつ複雑であることが予想され、その複雑さに対してサンプルサイズが小さいことが想定される。 このような状況では、深刻なBias-Variance tradeoffに直面する。 少ないパラメータ（短い回帰式、少ないサブサンプル分割）を推定する場合、大きなBiasを持つ 多くのパラメータ（長い回帰式、多いサブサンプル分割）を推定する場合、大きなVarianceを持つ。 Bias-variance tradeoffを分析者が先見的に解決することは一般に困難 @ref{LASSO} - ?? で紹介するLASSO/Ridge/Random Forestなどの手法は、bias-variance問題をよりデータ主導型かつ現実的な計算時間の手法で解決することを目指す。 4.2 パッケージ &amp; データ Rによる教師付き学習実装法には、大きく二つの有力な選択肢が存在する 個別の推定法を実装するパッケージ (例：LASSO &amp; Ridge \\(=\\) glmnet, Random Forest \\(=\\) ranger) を使用 dependencyを減らすことができ、パッケージの更新にも迅速に対応できる 個別パッケージで実装される手法を”共通”の文法で使用するメタパッケージ(例： caret, mlr3, tidymodels, SuerLeaner)を使用 初学者が色々な手法を試すことが容易 本ページでは、SuperLearnerの利用を前提にしている 他のメタパッケージに比べて”自由度”が低いが、コーディングに慣れていない読者にとっても比較的用意に使える（かも。。。） 後述するStacking法の実装を主目的としており、母集団への先見的知見が少ない社会科学において実用的 利用するパッケージ library(tidyverse) library(AER) library(SuperLearner) # 機械学習を実装するメタパッケージ library(rpart.plot) # 予測木の可視化 データ 元データを結果変数、予測変数データに分割する必要がある data(&quot;NMES1988&quot;) Y &lt;- NMES1988$emergency # 結果変数 X &lt;- select(NMES1988, -emergency ) # 予測変数 set.seed(123) 4.3 事前準備 ここでは5個のデータに分割する。 group &lt;- sample(1:5, # 1から5までの数字を発生される size = length(Y), # サンプルサイズと同数発生される replace = TRUE) # 同じ数字が発生することを許容する 第1データをテストデータ、2－5データを訓練データとして使用する 4.4 OLS 線形予測関数\\(f(X)=\\beta_0 + \\beta_1X_1+...+\\beta_LX_L\\)を想定 \\(\\beta_0,...,\\beta_L\\)を最小二乗法にて推定 \\[\\min\\sum_i (Y_i-f(X))^2\\] SuperLeanerによる推定と推定されたモデル fit &lt;- SuperLearner(Y = Y[group != 1], X = X[group != 1,], SL.library = c(&quot;SL.lm&quot;), cvControl = list(V = 20L) ) # 推定 coef(fit$fitLibrary$SL.lm_All$object) # 係数値の表示 ## (Intercept) visits nvisits ovisits novisits ## 0.1377112926 0.0036552347 0.0009715062 0.0032976320 -0.0031689963 ## hospital healthpoor healthexcellent chronic adllimited ## 0.4037474005 0.0969485276 -0.0307438996 0.0304625940 0.0685460489 ## regionnortheast regionmidwest regionwest age afamyes ## 0.0052059323 -0.0181151135 0.0287424583 0.0003025273 0.0327714591 ## gendermale marriedyes school income employedyes ## -0.0048794625 -0.0222767601 -0.0085525318 0.0042461305 0.0273419261 ## insuranceyes medicaidyes ## -0.0117301335 0.0295738407 元データ全体への予測値の計算 Y.pred &lt;- predict(fit,X)$pred テストデータへの適合 mean((Y - Y.pred)[group == 1]^2) ## [1] 0.3133464 訓練データへの適合 mean((Y - Y.pred)[group != 1]^2) ## [1] 0.3875598 デフォルトの設定では、訓練データのみを用いた交差検証（10分割）の結果も自動的に計算されている fit ## ## Call: ## SuperLearner(Y = Y[group != 1], X = X[group != 1, ], SL.library = c(&quot;SL.lm&quot;), ## cvControl = list(V = 20L)) ## ## ## Risk Coef ## SL.lm_All 0.396557 1 Risk \\(=\\) 交差検証法で推定されたMSE Coef \\(=\\) 後述するStackingモデルにおけるOLSによる予測値へのweight 4.5 LASSO LASSO推定：線形モデルを以下の最適化問題の解として推定 \\[\\min\\sum_i (Y_i-f(X_i))^2+\\underbrace{\\lambda\\sum_l|\\beta_l|}_{Penalty\\ term}\\] \\(\\lambda\\) : チューニングパラメタ、Cross-validationを用いて設定可能 glmentパッケージ(Friedman et al. 2021)を利用 glmnetはdata.frameを直接の入力できず、matrix(vector)に変換する必要がある fit &lt;- SuperLearner(Y = Y[group != 1], X = X[group != 1,], SL.library = c(&quot;SL.glmnet&quot;) ) coef(fit$fitLibrary$SL.glmnet_All$object) ## 23 x 1 sparse Matrix of class &quot;dgCMatrix&quot; ## s1 ## (Intercept) 0.2267243 ## visits . ## nvisits . ## ovisits . ## novisits . ## hospital 0.1373981 ## healthpoor . ## healthaverage . ## healthexcellent . ## chronic . ## adllimited . ## regionnortheast . ## regionmidwest . ## regionwest . ## age . ## afamyes . ## gendermale . ## marriedyes . ## school . ## income . ## employedyes . ## insuranceyes . ## medicaidyes . 元データ全体への予測値の計算 Y.pred &lt;- predict(fit,X)$pred テストデータへの適合 mean((Y - Y.pred)[group == 1]^2) ## [1] 0.3148209 訓練データへの適合 mean((Y - Y.pred)[group != 1]^2) ## [1] 0.3894155 交差検証 fit ## ## Call: ## SuperLearner(Y = Y[group != 1], X = X[group != 1, ], SL.library = c(&quot;SL.glmnet&quot;)) ## ## ## ## Risk Coef ## SL.glmnet_All 0.3933422 1 4.6 Ridge Ridge推定：線形モデルを以下の最適化問題の解として推定 \\[\\min\\sum_i (Y_i-f(X_i))^2+\\underbrace{\\lambda\\sum_l(\\beta_l)^2}_{Penalty\\ term}\\] \\(\\lambda\\) : チューニングパラメタ、Cross-validationを用いて設定可能 引き続きglmentパッケージ(Friedman et al. 2021)を利用 learners = create.Learner(&quot;SL.glmnet&quot;, params = list(alpha = 0)) # glmnetのalphaを0（Ridge推定）に設定 fit &lt;- SuperLearner(Y = Y, X = X, SL.library = c(learners$names) ) coef(fit$fitLibrary$SL.glmnet_1_All$object) ## 23 x 1 sparse Matrix of class &quot;dgCMatrix&quot; ## s1 ## (Intercept) 1.393051e-01 ## visits 3.545363e-03 ## nvisits 1.746575e-03 ## ovisits 2.521944e-03 ## novisits -1.055793e-05 ## hospital 1.559993e-01 ## healthpoor 8.134034e-02 ## healthaverage -3.493675e-02 ## healthexcellent -4.565236e-02 ## chronic 2.423562e-02 ## adllimited 6.203800e-02 ## regionnortheast -3.103490e-03 ## regionmidwest -8.315759e-03 ## regionwest 6.909235e-03 ## age 9.151894e-03 ## afamyes 1.956992e-02 ## gendermale 2.357971e-04 ## marriedyes -1.373979e-02 ## school -2.850516e-03 ## income -2.623278e-04 ## employedyes 4.012830e-03 ## insuranceyes -1.372911e-02 ## medicaidyes 3.394999e-02 元データ全体への予測値の計算 Y.pred &lt;- predict(fit,X)$pred テストデータへの適合 mean((Y - Y.pred)[group == 1]^2) ## [1] 0.3093827 訓練データへの適合 mean((Y - Y.pred)[group != 1]^2) ## [1] 0.3881482 交差検証 fit ## ## Call: SuperLearner(Y = Y, X = X, SL.library = c(learners$names)) ## ## ## Risk Coef ## SL.glmnet_1_All 0.3814595 1 4.7 Tree 予測木を推定する 推定法は以下の通り ある変数\\(X\\)のある閾値\\(\\bar X\\)において、サンプルを分割する 分割後のサブサンプル平均を暫定的予測値とする 予測値と訓練データにおける結果変数の値の乖離(MSE)を最小にするように、分割に用いる変数と閾値を決定 １回目の分割結果を所与として、２回目の分割を決定。変数と閾値は１回目と同様の基準で決定。 以上を繰り返す 推定された予測木について、pruningを実行 fit &lt;- SuperLearner(Y = Y, X = X, SL.library = c(&quot;SL.rpartPrune&quot;) ) rpart.plot(fit$fitLibrary$SL.rpartPrune_All$object) # 予測木の可視化 元データ全体への予測値の計算 Y.pred &lt;- predict(fit,X)$pred テストデータへの適合 mean((Y - Y.pred)[group == 1]^2) ## [1] 0.3357048 訓練データへの適合 mean((Y - Y.pred)[group != 1]^2) ## [1] 0.400284 交差検証 fit ## ## Call: SuperLearner(Y = Y, X = X, SL.library = c(&quot;SL.rpartPrune&quot;)) ## ## ## Risk Coef ## SL.rpartPrune_All 0.4048552 1 4.8 Random Forest Random Forestを推定する 多数の予測木を推定し、各予測値の平均値を最終予測値とする 平均を取ることで、予測値の分散削減が期待できる 予測木におけるサンプル分割において、ランダムに予測変数の部分集合を選ぶ 部分集合の中から、訓練データへの適合度が最大になるように分割を行う 各予測木の予測値の相関を減らし、平均化による分散削減を促進する fit &lt;- SuperLearner(Y = Y, X = X, SL.library = c(&quot;SL.ranger&quot;) ) 元データ全体への予測値の計算 Y.pred &lt;- predict(fit,X)$pred テストデータへの適合 mean((Y - Y.pred)[group == 1]^2) ## [1] 0.09084756 訓練データへの適合 mean((Y - Y.pred)[group != 1]^2) ## [1] 0.1132188 交差検証 fit ## ## Call: SuperLearner(Y = Y, X = X, SL.library = c(&quot;SL.ranger&quot;)) ## ## ## Risk Coef ## SL.ranger_All 0.389305 1 4.9 Stacking SuperLearner関数の主目的は、複数の予測モデルを線型結合した予測モデル（Super learner: Van der Laan, Polley, and Hubbard (2007)）の推定 \\(f_k(x)\\)をアルゴリズム\\(k\\) (例：LASSO, Ridge, Random Forest)により推定された予測値とすると、SuperLearnerは以下のように定義される \\[f_{SL}(x)=\\beta_1 f_1(x)+...+\\beta_K f_{K}(x)\\] ただし, \\(\\beta_k \\in [0,1]\\)かつ\\(\\beta_1+...+\\beta_K=1\\) learners = create.Learner(&quot;SL.glmnet&quot;, params = list(alpha = 0)) # Ridge推定の定義 fit &lt;- SuperLearner(X = X[group != 1,], Y = Y[group != 1], SL.library = c(&quot;SL.mean&quot;, &quot;SL.lm&quot;, &quot;SL.glmnet&quot;, &quot;SL.rpartPrune&quot;, &quot;SL.ranger&quot;, learners$names ) ) # モデル推定 &amp; 交差検証 fit ## ## Call: ## SuperLearner(Y = Y[group != 1], X = X[group != 1, ], SL.library = c(&quot;SL.mean&quot;, ## &quot;SL.lm&quot;, &quot;SL.glmnet&quot;, &quot;SL.rpartPrune&quot;, &quot;SL.ranger&quot;, learners$names)) ## ## ## Risk Coef ## SL.mean_All 0.5138474 0.0000000 ## SL.lm_All 0.3988573 0.0000000 ## SL.glmnet_All 0.3964502 0.5834839 ## SL.rpartPrune_All 0.4076422 0.2763088 ## SL.ranger_All 0.4119626 0.1402073 ## SL.glmnet_1_All 0.3989486 0.0000000 Coef \\(= \\beta_k\\) 訓練データ内の交差検証では、glmnetにより実装されたLASSOによる予測値の性能が最もいいことが確認できる Stackingモデルにおいて、最もweightが大きいのはLASSO、続いてrangerであることが確認できる Stackingモデルの予測値 Y.pred &lt;- predict(fit,X)$pred テストデータへの適合 mean((Y - Y.pred)[group == 1]^2) ## [1] 0.3163745 訓練データへの適合 mean((Y - Y.pred)[group != 1]^2) ## [1] 0.3381296 References "],["比較因果推論.html", "Chapter 5 比較・因果推論 5.1 比較 5.2 因果効果", " Chapter 5 比較・因果推論 Chapter 6-10 の背後にある問題意識・方針を紹介 Chapter 5.1 では本ページにおける「グループ間の比較」を具体的に定義し、その推定が抱える論点を明示する。 Chapter 5.2 では因果推論の問題を、識別の問題と推定の問題に大別し、代表的な論点を示す。 5.1 比較 5.1.1 問題設定 条件付きの比較：変数\\(D_i\\)の値が異なる集団間において、結果変数\\(Y_i\\)の分布がどの程度異なっているのか、推定する。 その際に、直接的な関心ではない変数群\\(X_i\\)を”一定”とする。 以下の議論では\\(Y_i\\)の平均値に焦点を当て、\\(E[Y_i|D_i=d,X_i]-E[Y_i|D_i=d&#39;,X_i]\\)の推定を目指す。 またこの際に点推定量のみならず、信頼区間の推定も行う。 5.1.2 推定上の問題 有限のサンプルを用いて、多数の\\(X_i,D_i\\)で条件づけた平均値を推定するためには、なんらかの工夫が必要 広く用いられてきた手法は、研究者により設定された線形モデルを重回帰で推定する方法 \\[E[Y_i|D_i=d,X_i=x]=\\underbrace{\\beta_d\\times d + \\beta_0 + \\beta_1\\times x_1+...+\\beta_L \\times x_L}_{線形モデル}\\] 設定された線形モデル重回帰の推定目標を条件付き平均値の線形近似と見做す“Agnostic view” (J. Angrist and Imbens 2002; J. D. Angrist and Pischke 2008)が、重回帰を利用する説得的な理由となりうる。 ”正しい”回帰モデルの定式化が難しい社会科学分野においては、条件付き平均値の”真”のモデルを設定することは事実上不可能であり、線形モデルを母集団上で定義された（真の条件付き平均値）の近似モデルとみなす方が妥当であるため しかしながら「異なる\\(D\\)グループ間で、\\(X\\)の分布が異なる」場合、\\(\\beta_D\\)の推計値が近似モデルの定式化に深刻に依存してしまう。 定式化への依存を緩和するために、推定の前処理としてマッチングを行うことが有力な方法となる。 \\(X\\)の数が多い場合、伝統的なマッチング手法の有効性は失われる。 この問題を回避するためにChapter 7 では、LASSOやRandom Forestなどの予測手法の応用を紹介する。 5.2 因果効果 5.2.1 問題設定 ある集団の変数\\(D\\)を変化させた場合、結果変数\\(Y\\)の分布がどのように変化するのか、因果効果を推定する。 潜在結果モデルを用いて定義する \\(Y_i(d)\\): 回答者\\(i\\)の原因変数が\\(d\\)であったときの結果変数値 \\(Y_i(d)-Y_i(d&#39;)\\): 原因変数が\\(d&#39;\\)から\\(d\\)に変化することの個人因果効果 5.2.2 識別の問題 因果効果を推定する際には、識別を議論する必要がある。 識別：「仮にサンプルサイズが無限大である」場合、どのような仮定の下で因果効果を推定できるか？ 5.2.2.1 Selection-on-observable Chapter 6 - 8では以下の仮定に基づき議論する。 \\(0&lt;\\Pr[D_i=d|X_i]&lt;1\\): サブグループにおいても、原因変数の値にバリエーションが存在する。 \\(X\\)で条件づけた場合、潜在結果関数と原因変数の実現値が独立している\\(Y_i(d)\\perp D_i|X_i=x\\) 十分条件：同じ\\(X\\)グループ内では、\\(D\\)の値がランダムに決定されている 以上の仮定のもとで\\(D\\)の因果効果は、\\(E[Y|D=d,X]-E[Y|D=d&#39;,X]\\)によって識別できる。 5.2.2.2 Regression discontinuity Chapter 9では以下の仮定に基づく手法を紹介 \\(D=\\{0,1\\}\\)とし、ある連続変数\\(X\\)についてcutoff\\(c\\)が存在するとする \\(\\lim_{x\\uparrow c}\\Pr[D_i=1|X_i=x]=1\\), \\(\\lim_{x\\downarrow c}\\Pr[D_i=1|X_i=x]=0\\) (Sharp discontinuity) より一般的には、原因変数の分布がcutoffの近傍で不連続に変化していれば推定できる (Fuzzy discontinuity) \\(\\lim_{x\\uparrow c}\\Pr[Y_i(d)|X_i=x]= \\lim_{x\\downarrow c}\\Pr[Y_i(d)|X_i=x]\\) 潜在結果変数の分布はcutofffの近傍で連続的に変化している 以上の条件の下で、cutoff\\(c\\)上の因果効果は以下のように識別される \\[E[Y_i(1)-Y_i(0)|X_i=c]=\\lim_{x\\uparrow c}E[Y_i|X_i=x]-\\lim_{x\\downarrow c}E[Y_i|X_i=x]\\] 5.2.2.3 Pallarel trend Chapter 10 では平行トレンドに基づく推定方法を紹介する。 2期間のパネルデータを想定し、Treatment/Control groupが存在するとする。 原因変数の値は以下を満たす。 \\(D_{i\\in T,0}=D_{i\\in C,0}=0\\)、\\(D_{i\\in T,1}=1, D_{i\\in C,1}=0\\)、ただし\\(i\\in T\\)はTreatment、\\(i\\in C\\)はControl groupに所属することを示す。 \\(E[Y_{i\\in T,1}(0)-Y_{i\\in T,0}(0)]=E[Y_{i\\in C,1}(0)-Y_{i\\in C,0}(0)]\\) 5.2.3 推定の問題 識別できたとしても、推定が困難な場合がある。 Selection-on-observableに基づく推定では、しばしば大量の\\(X\\)をコントロールする必要がある。この場合、比較と同じような推定上の問題を抱え、その解決策も共有する。 Regression discontinuityでは、\\(\\lim_{x\\uparrow c}E[Y_i|X_i=x]\\)、\\(\\lim_{x\\downarrow c}E[Y_i|X_i=x]\\)を以下に推定するかが問題となる。Chapter 10 ではもっとも標準的な局所的外挿による推定法を紹介する References "],["unique.html", "Chapter 6 線形モデルの推定 6.1 パッケージ &amp; データ 6.2 線形モデルの推定 6.3 マッチング法による修正 6.4 付録：推定結果の保存と表示", " Chapter 6 線形モデルの推定 関心のあるパラメータ\\(\\tau(X)=E[Y|d,X]-E[Y|d&#39;,X]\\)を埋め込んだ線形モデルを推定する。 典型的には、\\(E[Y|D,X]\\)を線形近似し、推定する。 \\[E[Y|D=d,X=x]=\\underbrace{\\tau}_{Interest\\ parameter}\\times d+\\underbrace{f(x)}_{Nuisance\\ function}\\] - \\(f(X)=\\beta_0 + \\beta_1 X_1 + ...+\\beta_LX_L\\) \\(\\tau\\)について点推定だけでなく、信頼区間も推定する。 Chapter 6.2 : 前処理なしに線形モデルを推定し、信頼区間を計算する方法を紹介 Chapter 6.3 : 近似モデルの定式化への依存度を下げるために、マッチング法を用いた前処理を導入 Chapter 6.4 : 推定結果の表によるまとめ、可視化、および複数の推定結果を効率的に保存する方法を紹介 6.1 パッケージ &amp; データ library(tidyverse) library(AER) library(estimatr) library(MatchIt) data(&quot;NMES1988&quot;) raw &lt;- na.omit(NMES1988) 6.2 線形モデルの推定 \\(\\tau(x)=\\tau,f(x)=\\beta_0+\\beta_1x_1+...+\\beta_Lx_L\\)と特定化 サンプル内MSEを最大化するように推定 robust standard errorを計算するためにestimatrパッケージ(Blair et al. 2021)を利用 lm_robust関数で推定 lm_robust(visits ~ insurance + region + age + afam + gender + school + income + employed + married, data = raw) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower ## (Intercept) 4.32086605 1.30928537 3.3001713 9.739642e-04 1.75400683 ## insuranceyes 0.96591490 0.24785140 3.8971533 9.877947e-05 0.48000123 ## regionnortheast 0.34814737 0.30392728 1.1454957 2.520663e-01 -0.24770327 ## regionmidwest -0.40583622 0.25526934 -1.5898354 1.119439e-01 -0.90629278 ## regionwest 0.57163030 0.30418463 1.8792215 6.028038e-02 -0.02472489 ## age 0.04293421 0.15977094 0.2687235 7.881551e-01 -0.27029737 ## afamyes -0.39294341 0.34701206 -1.1323624 2.575439e-01 -1.07326195 ## gendermale -0.46726544 0.22050124 -2.1191057 3.413748e-02 -0.89955902 ## school 0.08475793 0.03108035 2.7270588 6.415540e-03 0.02382479 ## income -0.04678801 0.03712934 -1.2601357 2.076873e-01 -0.11958023 ## employedyes -0.34186375 0.42407955 -0.8061312 4.202108e-01 -1.17327342 ## marriedyes -0.29559842 0.23244624 -1.2716851 2.035523e-01 -0.75131020 ## CI Upper DF ## (Intercept) 6.88772528 4394 ## insuranceyes 1.45182856 4394 ## regionnortheast 0.94399802 4394 ## regionmidwest 0.09462034 4394 ## regionwest 1.16798549 4394 ## age 0.35616578 4394 ## afamyes 0.28737512 4394 ## gendermale -0.03497187 4394 ## school 0.14569108 4394 ## income 0.02600421 4394 ## employedyes 0.48954591 4394 ## marriedyes 0.16011336 4394 線形モデルによる推定は、いくつかの問題がある 異なるグループ間で、\\(X\\)の分布が異なる場合、回帰式の定式化に強く依存する 一般に平均効果ではなく、加重平均が推計される サンプルサイズに比べて、少数のコントロール変数を導入できない 以下ではマッチング法、機械学手法を用いた頑強な推定を目指す 6.2.1 RCTデータへの応用 原因変数が完全にランダム化されている場合、因果効果の識別を目的に回帰分析を応用する必要はない 因果効果の推定の改善、効率性向上、を目的として線形モデルの利用は議論されてきた。(Freedman and others 2008; Freedman 2008) (Lin and others 2013)は、以下のような交差項を導入したモデルを用いることで、平均の差の推定に比べて、漸近的効率性が悪化することはない（同等か改善する）ことを示した \\[E[Y|D,X]=\\beta_{D}\\times D+\\beta_1\\times X_1+...+\\beta_L\\times X_L\\] \\[+\\underbrace{\\beta_{1D}\\times D\\times X_1+...+\\beta_{LD}\\times D\\times X_L}_{交差項}\\] 6.3 マッチング法による修正 回帰を行う事前準備としてマッチング法を利用する 重回帰が持つ関数形への依存度を減らせる (Daniel E. Ho et al. 2007) MathItパッケージ (Daniel E. Ho et al. 2011)を利用 多数のマッチング法が実装されている 6.3.1 Exact matching \\(X\\)が完全に同じサンプル同士をマッチングする 原因変数の分布に偏りがある場合（本例ではコントロールグループが少ない）、少ないグループ内での平均効果(Average treatment effect for treat または control)の推定を目指すことでマッチできないサンプルを減らすことが期待できる。 fit.m &lt;- matchit(insurance ~ region + age + afam + gender + school+ married + employed, data = raw, method = &quot;exact&quot;, estimand = &quot;ATC&quot; ) この例では、incomeもコントロール変数に加えた場合、Exact matching不可能（一つもマッチングできない） マッチング結果の表示 summary(fit.m) ## ## Call: ## matchit(formula = insurance ~ region + age + afam + gender + ## school + married + employed, data = raw, method = &quot;exact&quot;, ## estimand = &quot;ATC&quot;) ## ## Summary of Balance for All Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## regionnortheast 0.1938 0.1766 0.0450 . ## regionmidwest 0.2882 0.1736 0.3026 . ## regionwest 0.1818 0.1787 0.0082 . ## regionother 0.3362 0.4711 -0.2703 . ## age 7.3737 7.5021 -0.1849 0.7752 ## afamno 0.9380 0.6914 0.5340 . ## afamyes 0.0620 0.3086 -0.5340 . ## genderfemale 0.5849 0.6365 -0.1073 . ## gendermale 0.4151 0.3635 0.1073 . ## school 10.9547 7.9827 0.7549 0.7464 ## marriedno 0.4028 0.6315 -0.4740 . ## marriedyes 0.5972 0.3685 0.4740 . ## employedno 0.8857 0.9350 -0.2001 . ## employedyes 0.1143 0.0650 0.2001 . ## eCDF Mean eCDF Max ## regionnortheast 0.0172 0.0172 ## regionmidwest 0.1146 0.1146 ## regionwest 0.0031 0.0031 ## regionother 0.1349 0.1349 ## age 0.0357 0.0936 ## afamno 0.2467 0.2467 ## afamyes 0.2467 0.2467 ## genderfemale 0.0516 0.0516 ## gendermale 0.0516 0.0516 ## school 0.1564 0.3248 ## marriedno 0.2287 0.2287 ## marriedyes 0.2287 0.2287 ## employedno 0.0493 0.0493 ## employedyes 0.0493 0.0493 ## ## ## Summary of Balance for Matched Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## regionnortheast 0.2107 0.2107 0 . ## regionmidwest 0.2201 0.2201 0 . ## regionwest 0.1384 0.1384 0 . ## regionother 0.4308 0.4308 0 . ## age 7.3296 7.3296 0 0.9998 ## afamno 0.9434 0.9434 0 . ## afamyes 0.0566 0.0566 0 . ## genderfemale 0.6887 0.6887 0 . ## gendermale 0.3113 0.3113 0 . ## school 9.9277 9.9277 0 0.9998 ## marriedno 0.5283 0.5283 0 . ## marriedyes 0.4717 0.4717 0 . ## employedno 0.9560 0.9560 0 . ## employedyes 0.0440 0.0440 0 . ## eCDF Mean eCDF Max Std. Pair Dist. ## regionnortheast 0 0 0 ## regionmidwest 0 0 0 ## regionwest 0 0 0 ## regionother 0 0 0 ## age 0 0 0 ## afamno 0 0 0 ## afamyes 0 0 0 ## genderfemale 0 0 0 ## gendermale 0 0 0 ## school 0 0 0 ## marriedno 0 0 0 ## marriedyes 0 0 0 ## employedno 0 0 0 ## employedyes 0 0 0 ## ## Percent Balance Improvement: ## Std. Mean Diff. Var. Ratio eCDF Mean eCDF Max ## regionnortheast 100 . 100 100 ## regionmidwest 100 . 100 100 ## regionwest 100 . 100 100 ## regionother 100 . 100 100 ## age 100 99.9 100 100 ## afamno 100 . 100 100 ## afamyes 100 . 100 100 ## genderfemale 100 . 100 100 ## gendermale 100 . 100 100 ## school 100 99.9 100 100 ## marriedno 100 . 100 100 ## marriedyes 100 . 100 100 ## employedno 100 . 100 100 ## employedyes 100 . 100 100 ## ## Sample Sizes: ## Control Treated ## All 985 3421. ## Matched (ESS) 318 338.39 ## Matched 318 624. ## Unmatched 667 2797. ## Discarded 0 0. Sample sizesにて、マッチングできなかったサンプル数（985のコントロールグループ中、667サンプルがマッチングできなかった）が確認できる マッチング結果の図示 fit.m |&gt; summary() |&gt; plot(xlim = c(0,2)) マッチング結果を変数として含んだデータを作成 df &lt;- match.data(fit.m) “subclass”: マッチングしたグループ “weights”：マッチング後の推計に用いるウェイト マッチングしたデータを用いた推定 新たに作成されるweight (defaltではweights)を用いた、加重推定で実装 lm_robust(visits ~ insurance, df, weights = weights) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## (Intercept) 4.707547 0.2978972 15.802589 4.605531e-50 4.1229266 5.292168 940 ## insuranceyes 1.481104 0.4842812 3.058355 2.288589e-03 0.5307064 2.431501 940 6.3.2 Coarsened exact matching Coarsened exact matching(Iacus, King, and Porro 2012)の実装 連続変数をカテゴリー変数化することで、マッチングできるサンプルサイズを増やすことが期待できる fit.m &lt;- matchit(insurance ~ region + age + afam + gender + school+ married + employed + income, data = raw, method = &quot;cem&quot;, estimand = &quot;ATC&quot;) マッチング結果 summary(fit.m) ## ## Call: ## matchit(formula = insurance ~ region + age + afam + gender + ## school + married + employed + income, data = raw, method = &quot;cem&quot;, ## estimand = &quot;ATC&quot;) ## ## Summary of Balance for All Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## regionnortheast 0.1938 0.1766 0.0450 . ## regionmidwest 0.2882 0.1736 0.3026 . ## regionwest 0.1818 0.1787 0.0082 . ## regionother 0.3362 0.4711 -0.2703 . ## age 7.3737 7.5021 -0.1849 0.7752 ## afamno 0.9380 0.6914 0.5340 . ## afamyes 0.0620 0.3086 -0.5340 . ## genderfemale 0.5849 0.6365 -0.1073 . ## gendermale 0.4151 0.3635 0.1073 . ## school 10.9547 7.9827 0.7549 0.7464 ## marriedno 0.4028 0.6315 -0.4740 . ## marriedyes 0.5972 0.3685 0.4740 . ## employedno 0.8857 0.9350 -0.2001 . ## employedyes 0.1143 0.0650 0.2001 . ## income 2.7759 1.6630 0.5889 2.7193 ## eCDF Mean eCDF Max ## regionnortheast 0.0172 0.0172 ## regionmidwest 0.1146 0.1146 ## regionwest 0.0031 0.0031 ## regionother 0.1349 0.1349 ## age 0.0357 0.0936 ## afamno 0.2467 0.2467 ## afamyes 0.2467 0.2467 ## genderfemale 0.0516 0.0516 ## gendermale 0.0516 0.0516 ## school 0.1564 0.3248 ## marriedno 0.2287 0.2287 ## marriedyes 0.2287 0.2287 ## employedno 0.0493 0.0493 ## employedyes 0.0493 0.0493 ## income 0.1920 0.3244 ## ## ## Summary of Balance for Matched Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## regionnortheast 0.1663 0.1663 -0.0000 . ## regionmidwest 0.2026 0.2026 -0.0000 . ## regionwest 0.1471 0.1471 -0.0000 . ## regionother 0.4840 0.4840 -0.0000 . ## age 7.3175 7.3117 0.0084 0.9786 ## afamno 0.8486 0.8486 0.0000 . ## afamyes 0.1514 0.1514 -0.0000 . ## genderfemale 0.6652 0.6652 -0.0000 . ## gendermale 0.3348 0.3348 -0.0000 . ## school 9.2821 9.2601 0.0056 0.9798 ## marriedno 0.5458 0.5458 -0.0000 . ## marriedyes 0.4542 0.4542 -0.0000 . ## employedno 0.9659 0.9659 0.0000 . ## employedyes 0.0341 0.0341 -0.0000 . ## income 1.6947 1.4311 0.1395 0.9181 ## eCDF Mean eCDF Max Std. Pair Dist. ## regionnortheast 0.0000 0.0000 0.0000 ## regionmidwest 0.0000 0.0000 0.0000 ## regionwest 0.0000 0.0000 0.0000 ## regionother 0.0000 0.0000 0.0000 ## age 0.0040 0.0237 0.1533 ## afamno 0.0000 0.0000 0.0000 ## afamyes 0.0000 0.0000 0.0000 ## genderfemale 0.0000 0.0000 0.0000 ## gendermale 0.0000 0.0000 0.0000 ## school 0.0018 0.0158 0.0211 ## marriedno 0.0000 0.0000 0.0000 ## marriedyes 0.0000 0.0000 0.0000 ## employedno 0.0000 0.0000 0.0000 ## employedyes 0.0000 0.0000 0.0000 ## income 0.0845 0.1898 0.3971 ## ## Percent Balance Improvement: ## Std. Mean Diff. Var. Ratio eCDF Mean eCDF Max ## regionnortheast 100.0 . 100.0 100.0 ## regionmidwest 100.0 . 100.0 100.0 ## regionwest 100.0 . 100.0 100.0 ## regionother 100.0 . 100.0 100.0 ## age 95.5 91.5 88.8 74.7 ## afamno 100.0 . 100.0 100.0 ## afamyes 100.0 . 100.0 100.0 ## genderfemale 100.0 . 100.0 100.0 ## gendermale 100.0 . 100.0 100.0 ## school 99.3 93.0 98.8 95.1 ## marriedno 100.0 . 100.0 100.0 ## marriedyes 100.0 . 100.0 100.0 ## employedno 100.0 . 100.0 100.0 ## employedyes 100.0 . 100.0 100.0 ## income 76.3 91.5 56.0 41.5 ## ## Sample Sizes: ## Control Treated ## All 985 3421. ## Matched (ESS) 469 438.65 ## Matched 469 1196. ## Unmatched 516 2225. ## Discarded 0 0. 可視化 fit.m |&gt; summary() |&gt; plot(xlim = c(0,2)) Exact matching以外のマッチング法では、マッチングされたサンプル内でも\\(X\\)の違いが残る マッチングされたサンプル内で回帰分析を行うことで、再調整する df &lt;- match.data(fit.m) lm_robust(visits ~ insurance + region + age + afam + gender + school+ married + employed + income, df, weights = weights) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower ## (Intercept) 0.07031894 3.1830746 0.02209152 9.823776e-01 -6.17296408 ## insuranceyes 1.63803136 0.4111893 3.98364310 7.081498e-05 0.83152463 ## regionnortheast 0.37332676 0.6686084 0.55836385 5.766716e-01 -0.93808186 ## regionmidwest -1.01255860 0.4957411 -2.04251498 4.125884e-02 -1.98490525 ## regionwest 1.46720871 0.9811751 1.49535874 1.350117e-01 -0.45726821 ## age 0.54604701 0.4139224 1.31920151 1.872845e-01 -0.26582038 ## afamyes -1.09566719 0.8327555 -1.31571289 1.884529e-01 -2.72903401 ## gendermale -0.77640463 0.5006594 -1.55076411 1.211496e-01 -1.75839805 ## school 0.16064654 0.1041628 1.54226418 1.232008e-01 -0.04365837 ## marriedyes -0.16566757 0.5419170 -0.30570652 7.598666e-01 -1.22858372 ## employedyes -1.47819362 1.1718433 -1.26142599 2.073334e-01 -3.77664729 ## income -0.36310301 0.1778814 -2.04126501 4.138301e-02 -0.71199956 ## CI Upper DF ## (Intercept) 6.31360197 1653 ## insuranceyes 2.44453809 1653 ## regionnortheast 1.68473538 1653 ## regionmidwest -0.04021195 1653 ## regionwest 3.39168562 1653 ## age 1.35791440 1653 ## afamyes 0.53769963 1653 ## gendermale 0.20558879 1653 ## school 0.36495144 1653 ## marriedyes 0.89724858 1653 ## employedyes 0.82026004 1653 ## income -0.01420647 1653 6.3.3 Propensity score with subclassification Coarsened exact matchingでもマッチングできないサンプルが多数出てくる可能性 とくに\\(X\\)が大量にある場合 1次元の距離指標を用いて、マッチングを行う 距離指標としては、Mahalanobis’ Distance、Propensity scoreなど ここではPropensity score \\(p_d(X)\\)を用いる \\[p_d(X)\\equiv \\Pr[D=d|X]\\] 属性\\(X\\)のユニットの中で、原因変数の値が\\(d\\)である人の割合 未知の場合、データから推定する必要がある 推定された傾向スコアを用いたStratification マッチング - ロジットにて傾向スコアを推定 fit.m &lt;- matchit(insurance ~ region + age + afam + gender + school+ married + employed + income, data = raw, method = &quot;subclass&quot;, estimand = &quot;ATC&quot; ) マッチング結果 summary(fit.m) ## ## Call: ## matchit(formula = insurance ~ region + age + afam + gender + ## school + married + employed + income, data = raw, method = &quot;subclass&quot;, ## estimand = &quot;ATC&quot;) ## ## Summary of Balance for All Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## distance 0.8230 0.6148 0.8783 0.3568 ## regionnortheast 0.1938 0.1766 0.0450 . ## regionmidwest 0.2882 0.1736 0.3026 . ## regionwest 0.1818 0.1787 0.0082 . ## regionother 0.3362 0.4711 -0.2703 . ## age 7.3737 7.5021 -0.1849 0.7752 ## afamno 0.9380 0.6914 0.5340 . ## afamyes 0.0620 0.3086 -0.5340 . ## genderfemale 0.5849 0.6365 -0.1073 . ## gendermale 0.4151 0.3635 0.1073 . ## school 10.9547 7.9827 0.7549 0.7464 ## marriedno 0.4028 0.6315 -0.4740 . ## marriedyes 0.5972 0.3685 0.4740 . ## employedno 0.8857 0.9350 -0.2001 . ## employedyes 0.1143 0.0650 0.2001 . ## income 2.7759 1.6630 0.5889 2.7193 ## eCDF Mean eCDF Max ## distance 0.2750 0.4285 ## regionnortheast 0.0172 0.0172 ## regionmidwest 0.1146 0.1146 ## regionwest 0.0031 0.0031 ## regionother 0.1349 0.1349 ## age 0.0357 0.0936 ## afamno 0.2467 0.2467 ## afamyes 0.2467 0.2467 ## genderfemale 0.0516 0.0516 ## gendermale 0.0516 0.0516 ## school 0.1564 0.3248 ## marriedno 0.2287 0.2287 ## marriedyes 0.2287 0.2287 ## employedno 0.0493 0.0493 ## employedyes 0.0493 0.0493 ## income 0.1920 0.3244 ## ## Summary of Balance Across Subclasses ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## distance 0.6264 0.6148 0.0486 0.9752 ## regionnortheast 0.1752 0.1766 -0.0039 . ## regionmidwest 0.1941 0.1736 0.0542 . ## regionwest 0.1915 0.1787 0.0335 . ## regionother 0.4392 0.4711 -0.0638 . ## age 7.4961 7.5021 -0.0087 0.8894 ## afamno 0.6956 0.6914 0.0092 . ## afamyes 0.3044 0.3086 -0.0092 . ## genderfemale 0.5977 0.6365 -0.0807 . ## gendermale 0.4023 0.3635 0.0807 . ## school 8.0956 7.9827 0.0287 1.0967 ## marriedno 0.6000 0.6315 -0.0653 . ## marriedyes 0.4000 0.3685 0.0653 . ## employedno 0.9157 0.9350 -0.0782 . ## employedyes 0.0843 0.0650 0.0782 . ## income 1.9086 1.6630 0.1300 1.3758 ## eCDF Mean eCDF Max ## distance 0.0133 0.0457 ## regionnortheast 0.0015 0.0015 ## regionmidwest 0.0205 0.0205 ## regionwest 0.0128 0.0128 ## regionother 0.0319 0.0319 ## age 0.0133 0.0339 ## afamno 0.0042 0.0042 ## afamyes 0.0042 0.0042 ## genderfemale 0.0388 0.0388 ## gendermale 0.0388 0.0388 ## school 0.0109 0.0311 ## marriedno 0.0315 0.0315 ## marriedyes 0.0315 0.0315 ## employedno 0.0193 0.0193 ## employedyes 0.0193 0.0193 ## income 0.0622 0.1485 ## ## Percent Balance Improvement: ## Std. Mean Diff. Var. Ratio eCDF Mean eCDF Max ## distance 94.5 -173.3 95.2 89.3 ## regionnortheast 91.3 . 91.3 91.3 ## regionmidwest 82.1 . 82.1 82.1 ## regionwest -309.1 . -309.1 -309.1 ## regionother 76.4 . 76.4 76.4 ## age 95.3 -14.7 62.7 63.8 ## afamno 98.3 . 98.3 98.3 ## afamyes 98.3 . 98.3 98.3 ## genderfemale 24.8 . 24.8 24.8 ## gendermale 24.8 . 24.8 24.8 ## school 96.2 -46.9 93.1 90.4 ## marriedno 86.2 . 86.2 86.2 ## marriedyes 86.2 . 86.2 86.2 ## employedno 60.9 . 60.9 60.9 ## employedyes 60.9 . 60.9 60.9 ## income 77.9 49.4 67.6 54.2 ## ## Sample Sizes: ## Control Treated ## All 985 3421. ## Matched (ESS) 985 999.44 ## Matched 985 3421. ## Unmatched 0 0. ## Discarded 0 0. マッチング結果の図示 fit.m |&gt; summary() |&gt; plot(xlim = c(0,2)) マッチングしたデータを用いた推定 df &lt;- match.data(fit.m) # マッチング結果を含んだ lm_robust(visits ~ insurance + region + age + afam + gender + school+ married + employed, df, weights = weights) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower ## (Intercept) 2.69483196 1.56827266 1.7183440 0.085804312 -0.37977270 ## insuranceyes 0.86429413 0.30326930 2.8499229 0.004393338 0.26973348 ## regionnortheast 0.32880379 0.47161144 0.6971921 0.485719430 -0.59579228 ## regionmidwest -0.72444843 0.38788012 -1.8677122 0.061868702 -1.48488891 ## regionwest 0.36858393 0.43102618 0.8551312 0.392525130 -0.47644456 ## age 0.32472400 0.19637511 1.6535904 0.098282174 -0.06027016 ## afamyes -0.73188348 0.46736086 -1.5659923 0.117422424 -1.64814626 ## gendermale -1.02017368 0.34142463 -2.9879909 0.002823707 -1.68953801 ## school 0.05542150 0.04126024 1.3432182 0.179270695 -0.02546936 ## marriedyes -0.07195191 0.30991060 -0.2321699 0.816416863 -0.67953285 ## employedyes -0.54902900 0.45865317 -1.1970461 0.231353145 -1.44822033 ## CI Upper DF ## (Intercept) 5.76943662 4395 ## insuranceyes 1.45885478 4395 ## regionnortheast 1.25339987 4395 ## regionmidwest 0.03599205 4395 ## regionwest 1.21361243 4395 ## age 0.70971816 4395 ## afamyes 0.18437930 4395 ## gendermale -0.35080936 4395 ## school 0.13631236 4395 ## marriedyes 0.53562902 4395 ## employedyes 0.35016234 4395 6.3.4 Nearest neighbor matching 傾向スコアを用いた最近旁マッチング 傾向スコアがもっとも似ているサンプルとマッチングする デフォルトでは、Replacement無しのマッチングを行う fit.m &lt;- matchit(insurance ~ region + age + afam + gender + school+ married + employed + income, data = raw, method = &quot;nearest&quot;, estimand = &quot;ATC&quot; ) マッチング結果 summary(fit.m) ## ## Call: ## matchit(formula = insurance ~ region + age + afam + gender + ## school + married + employed + income, data = raw, method = &quot;nearest&quot;, ## estimand = &quot;ATC&quot;) ## ## Summary of Balance for All Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## distance 0.8230 0.6148 0.8783 0.3568 ## regionnortheast 0.1938 0.1766 0.0450 . ## regionmidwest 0.2882 0.1736 0.3026 . ## regionwest 0.1818 0.1787 0.0082 . ## regionother 0.3362 0.4711 -0.2703 . ## age 7.3737 7.5021 -0.1849 0.7752 ## afamno 0.9380 0.6914 0.5340 . ## afamyes 0.0620 0.3086 -0.5340 . ## genderfemale 0.5849 0.6365 -0.1073 . ## gendermale 0.4151 0.3635 0.1073 . ## school 10.9547 7.9827 0.7549 0.7464 ## marriedno 0.4028 0.6315 -0.4740 . ## marriedyes 0.5972 0.3685 0.4740 . ## employedno 0.8857 0.9350 -0.2001 . ## employedyes 0.1143 0.0650 0.2001 . ## income 2.7759 1.6630 0.5889 2.7193 ## eCDF Mean eCDF Max ## distance 0.2750 0.4285 ## regionnortheast 0.0172 0.0172 ## regionmidwest 0.1146 0.1146 ## regionwest 0.0031 0.0031 ## regionother 0.1349 0.1349 ## age 0.0357 0.0936 ## afamno 0.2467 0.2467 ## afamyes 0.2467 0.2467 ## genderfemale 0.0516 0.0516 ## gendermale 0.0516 0.0516 ## school 0.1564 0.3248 ## marriedno 0.2287 0.2287 ## marriedyes 0.2287 0.2287 ## employedno 0.0493 0.0493 ## employedyes 0.0493 0.0493 ## income 0.1920 0.3244 ## ## ## Summary of Balance for Matched Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## distance 0.6835 0.6148 0.2897 0.5687 ## regionnortheast 0.1939 0.1766 0.0453 . ## regionmidwest 0.1878 0.1736 0.0375 . ## regionwest 0.1949 0.1787 0.0424 . ## regionother 0.4234 0.4711 -0.0956 . ## age 7.4870 7.5021 -0.0218 0.8702 ## afamno 0.8010 0.6914 0.2374 . ## afamyes 0.1990 0.3086 -0.2374 . ## genderfemale 0.6173 0.6365 -0.0401 . ## gendermale 0.3827 0.3635 0.0401 . ## school 8.5736 7.9827 0.1501 0.8404 ## marriedno 0.5909 0.6315 -0.0842 . ## marriedyes 0.4091 0.3685 0.0842 . ## employedno 0.9228 0.9350 -0.0494 . ## employedyes 0.0772 0.0650 0.0494 . ## income 1.7858 1.6630 0.0650 0.7674 ## eCDF Mean eCDF Max Std. Pair Dist. ## distance 0.0309 0.1827 0.2898 ## regionnortheast 0.0173 0.0173 0.7800 ## regionmidwest 0.0142 0.0142 0.7130 ## regionwest 0.0162 0.0162 0.7897 ## regionother 0.0477 0.0477 0.9173 ## age 0.0133 0.0365 1.0470 ## afamno 0.1096 0.1096 0.4879 ## afamyes 0.1096 0.1096 0.4879 ## genderfemale 0.0193 0.0193 0.9224 ## gendermale 0.0193 0.0193 0.9224 ## school 0.0318 0.0924 0.7555 ## marriedno 0.0406 0.0406 0.8292 ## marriedyes 0.0406 0.0406 0.8292 ## employedno 0.0122 0.0122 0.5437 ## employedyes 0.0122 0.0122 0.5437 ## income 0.0615 0.1472 0.7354 ## ## Percent Balance Improvement: ## Std. Mean Diff. Var. Ratio eCDF Mean eCDF Max ## distance 67.0 45.2 88.7 57.4 ## regionnortheast -0.6 . -0.6 -0.6 ## regionmidwest 87.6 . 87.6 87.6 ## regionwest -417.6 . -417.6 -417.6 ## regionother 64.6 . 64.6 64.6 ## age 88.2 45.4 62.7 60.9 ## afamno 55.5 . 55.5 55.5 ## afamyes 55.5 . 55.5 55.5 ## genderfemale 62.6 . 62.6 62.6 ## gendermale 62.6 . 62.6 62.6 ## school 80.1 40.6 79.6 71.6 ## marriedno 82.2 . 82.2 82.2 ## marriedyes 82.2 . 82.2 82.2 ## employedno 75.3 . 75.3 75.3 ## employedyes 75.3 . 75.3 75.3 ## income 89.0 73.5 67.9 54.6 ## ## Sample Sizes: ## Control Treated ## All 985 3421 ## Matched 985 985 ## Unmatched 0 2436 ## Discarded 0 0 マッチング結果の図示 fit.m |&gt; summary() |&gt; plot(xlim = c(0,2)) マッチングしたデータを用いた推定 replacement無しの場合ｍマッチングしたペア(subclass)でクラスタリングしたrobust standard errorの利用を推奨 (Abadie and Spiess 2021) df &lt;- match.data(fit.m) # マッチング結果を含んだ lm_robust(visits ~ insurance + region + age + afam + gender + school+ married + employed + income, df, clusters = subclass, weights = weights) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower ## (Intercept) 4.28376769 1.80365512 2.3750481 0.0179117218 0.74034506 ## insuranceyes 0.88089215 0.27930681 3.1538513 0.0016606844 0.33277940 ## regionnortheast 0.11745650 0.43169716 0.2720808 0.7856724490 -0.73071167 ## regionmidwest -1.09402106 0.34563753 -3.1652265 0.0016483956 -1.77317575 ## regionwest 0.67689981 0.41977554 1.6125280 0.1074679565 -0.14780947 ## age 0.15738399 0.21874416 0.7194889 0.4721765473 -0.27238904 ## afamyes -0.65822959 0.31824549 -2.0683077 0.0391049262 -1.28343451 ## gendermale -1.12983896 0.30900225 -3.6564101 0.0002772051 -1.73664207 ## school 0.04179621 0.03992562 1.0468521 0.2957240492 -0.03666544 ## marriedyes 0.26953526 0.28939461 0.9313762 0.3520209096 -0.29877535 ## employedyes -0.28682948 0.69900943 -0.4103371 0.6821000780 -1.66715900 ## income -0.18287346 0.07454076 -2.4533350 0.0158456243 -0.33072080 ## CI Upper DF ## (Intercept) 7.82719031 515.2437 ## insuranceyes 1.42900489 973.5096 ## regionnortheast 0.96562467 498.9836 ## regionmidwest -0.41486638 478.5757 ## regionwest 1.50160909 508.1414 ## age 0.58715703 499.0168 ## afamyes -0.03302466 519.9827 ## gendermale -0.52303586 627.8155 ## school 0.12025787 454.6173 ## marriedyes 0.83784587 621.0176 ## employedyes 1.09350005 162.2410 ## income -0.03502611 102.2246 6.4 付録：推定結果の保存と表示 6.4.1 推計結果表 tidy関数により推定結果data.frameに変化することで、kable関数(knitrパッケージ)による推計結果表の整形、geom_pointrange関数による可視化が可能 点推定値(estimate)、標準誤差(std.error)のみを残した推計結果表 library(knitr) lm_robust(visits ~ insurance + region + age + afam + gender + school, data = raw ) |&gt; tidy() |&gt; select(term, estimate, std.error) |&gt; kable(digits = 2) term estimate std.error (Intercept) 3.65 1.23 insuranceyes 0.90 0.25 regionnortheast 0.36 0.30 regionmidwest -0.40 0.25 regionwest 0.55 0.30 age 0.12 0.15 afamyes -0.35 0.34 gendermale -0.63 0.21 school 0.07 0.03 lm_robust(visits ~ insurance + region + age + afam + gender + school, data = raw ) |&gt; tidy() |&gt; select(term, estimate, std.error) |&gt; filter(term == &quot;insuranceyes&quot;) |&gt; kable(digits = 2) term estimate std.error insuranceyes 0.9 0.25 6.4.2 Dot-and-Whisker plotによる可視化 Dot-and-Whisker図により点推定量と信頼区間を可視化 lm_robust(visits ~ insurance + region + age + afam + gender + school, data = raw) |&gt; tidy() |&gt; filter(term != &quot;(Intercept)&quot; ) |&gt; ggplot(aes(y = term, x = estimate, xmin = conf.low, xmax = conf.high) ) + geom_pointrange() + geom_vline(xintercept = 0) 6.4.3 サブサンプル分析結果の整理と可視化 条件付き平均効果\\(=E[Y_i(d)-Y_i(d&#39;)|X_i=x]\\) 因果効果の異質性を議論する上で、有力な要約値 少数の\\(x\\)を分析者が事前設定する場合、\\(x\\)についてサブサンプルを作成し、推定すればOK tidyverseパッケージに含まれるnest/unnest関数を用いれば、整理したサブサンプル分析が可能でかつ、容易に可視化/表化できる 推定結果を入子リスト形式に保存し、通常のデータフレーム形式に展開、可視化/表化する手順踏む 関数をリストの構成要素に逐次適用する汎関数(map)を利用することで、同じデータフレーム内に結果を保存できる 以下では“region”ごとに条件付き平均効果を推定する regression &lt;- function(df){ lm_robust(visits ~ insurance + age + afam + gender + school + income + employed + married, data = df) |&gt; tidy() |&gt; filter(term == &quot;insuranceyes&quot;) } # 推計し、関心のあるパラメータのみからなるデータフレーム化する関数 result &lt;- raw |&gt; group_by(region) |&gt; # regoinごとにサブグループ化 nest() |&gt; # regionごとに入子データを作成 mutate(model = map(data,regression)) |&gt; # 推定し、モデルとして結果をほぞpン unnest() |&gt; # 入子構造を解消 distinct(region, estimate, conf.low, conf.high) # regionごとの結果表を作成 データフレームなので、容易に可視化できる result |&gt; ggplot(aes(x = estimate, y = region, xmin = conf.low, xmax = conf.high) ) + geom_pointrange() + geom_vline(xintercept = 0) 6.4.4 複数の推定結果の整理と可視化 listで保存し、data.frameに展開、という手順はより一般に複数の推定結果を整理することに使える list &lt;- list() # 空のリストを作成 list[[1]] &lt;- lm_robust(visits ~ insurance + age + afam + gender + school + income + employed + married +region, data = raw) |&gt; tidy() |&gt; filter(term == &quot;insuranceyes&quot;) # 推定結果をリストに保存 list[[2]] &lt;- lm_robust(nvisits ~ insurance + age + afam + gender + school + income + employed + married +region, data = raw) |&gt; tidy() |&gt; filter(term == &quot;insuranceyes&quot;) # 別の結果を保存 names(list) &lt;- c(&quot;visits&quot;,&quot;nvisits&quot;) # 名づけ result &lt;- enframe(list) |&gt; unnest() # データフレーム化 result |&gt; ggplot(aes(y = name, x = estimate, xmin = conf.low, xmax = conf.high ) ) + geom_pointrange() # 可視化 References "],["general.html", "Chapter 7 部分線形モデルの推定 7.1 パッケージ 7.2 データ 7.3 Double selection: rlassoEffect (hdm) 7.4 Double Machine Learning (DoubleML)", " Chapter 7 部分線形モデルの推定 部分線形モデル\\(=\\)線形モデルの一般化 \\[E[Y|D=d,X=x]=\\underbrace{\\tau}_{Interest\\ parameter}\\times d+\\underbrace{f(x)}_{Nuisance\\ function}\\] 部分線形モデルをロビンソン変換(Robinson 1988) \\[Y_i-\\underbrace{E[Y_i|X_i]}_{Nuisance\\ term}=\\tau\\times [D_i-\\underbrace{E[D_i|X_i]}_{Nuisance\\ term}]+u_i\\] \\(E[Y_i|X_i],E[D_i|X_i]\\)を予測関数として推定し、予測誤差間を単回帰すればよい 実際には\\(E[Y_i|X_i],E[D_i|X_i]\\)は未知の関数なので何らかの方法で推定する必要がある。関数の推定なので予測の手法が適用できる。 7.1 パッケージ library(tidyverse) library(AER) library(hdm) library(DoubleML) library(mlr3) library(mlr3learners) library(data.table) 7.2 データ data(&quot;NMES1988&quot;) raw &lt;- na.omit(NMES1988) set.seed(123) 7.3 Double selection: rlassoEffect (hdm) 2重選択法(Belloni, Chernozhukov, and Hansen 2014)を紹介 LASSOにより\\(Y_i,D_i\\)の両方あるいはどちらか一方を予測する上でrelevantな\\(X^c\\)を特定しコントロールする \\(Y_i,D_i\\)どちらの予測にもrelevantではない変数は除外する hdmパッケージ(Spindler, Chernozhukov, and Hansen 2019)を利用 Y &lt;- raw$visits D &lt;- if_else(raw$insurance == &quot;yes&quot;,1,0) X &lt;- model.matrix(~ - 1+ region + age + afam + gender + school + I(age^2) + I(school^2) + region:age + region:afam + region:gender + region:school + age:afam + age:gender + age:school + afam:gender + afam:school + gender:school, raw) fit &lt;- rlassoEffect(x = X, y = Y, d = D, method = &quot;double selection&quot;) 推定結果 summary(fit) ## [1] &quot;Estimates and significance testing of the effect of target variables&quot; ## Estimate. Std. Error t value Pr(&gt;|t|) ## d1 0.8642 0.2452 3.524 0.000425 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 選択されたコントロール変数 fit$selection.index ## regionnortheast regionmidwest ## FALSE TRUE ## regionwest regionother ## FALSE FALSE ## age afamyes ## FALSE FALSE ## gendermale school ## FALSE TRUE ## I(age^2) I(school^2) ## FALSE FALSE ## regionnortheast:age regionmidwest:age ## FALSE FALSE ## regionwest:age regionnortheast:afamyes ## FALSE FALSE ## regionmidwest:afamyes regionwest:afamyes ## FALSE FALSE ## regionnortheast:gendermale regionmidwest:gendermale ## FALSE FALSE ## regionwest:gendermale regionnortheast:school ## FALSE FALSE ## regionmidwest:school regionwest:school ## FALSE FALSE ## age:afamyes age:gendermale ## TRUE FALSE ## age:school afamyes:gendermale ## TRUE FALSE ## afamyes:school gendermale:school ## FALSE FALSE 7.4 Double Machine Learning (DoubleML) Double Machine Learning法(Chernozhukov et al. 2018)を紹介 なんらかの方法（例、OLS、ランダムフォレスト、LASSO）で\\(E[Y|X],E[D|X]\\)の予測関数\\(f_Y(X),f_D(X)\\)を推定し、予測誤差を単回帰 DoubleMLパッケージ(Bach et al. 2021)を利用 X &lt;- model.matrix(~ - 1+ region + age + afam + gender + school, raw) learner &lt;- lrn(&quot;regr.ranger&quot;, num.trees = 100) # Require bigger num.trees in practice ml_g &lt;- learner$clone() ml_m &lt;- learner$clone() obj_dml_data &lt;- double_ml_data_from_matrix(X = X, y = as.numeric(Y), d = as.numeric(D)) dml_plr_obj &lt;- DoubleMLPLR$new(obj_dml_data, ml_g, ml_m, dml_procedure=&quot;dml1&quot;, n_rep = 3) dml_plr_obj$fit() ## INFO [16:52:27.887] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 5/5) ## INFO [16:52:27.956] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 1/5) ## INFO [16:52:28.015] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 3/5) ## INFO [16:52:28.073] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 4/5) ## INFO [16:52:28.128] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 2/5) ## INFO [16:52:28.218] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 5/5) ## INFO [16:52:28.274] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 1/5) ## INFO [16:52:28.330] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 3/5) ## INFO [16:52:28.384] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 4/5) ## INFO [16:52:28.440] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 2/5) ## INFO [16:52:28.552] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 3/5) ## INFO [16:52:28.608] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 1/5) ## INFO [16:52:28.664] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 4/5) ## INFO [16:52:28.720] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 5/5) ## INFO [16:52:28.776] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 2/5) ## INFO [16:52:28.863] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 1/5) ## INFO [16:52:28.918] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 3/5) ## INFO [16:52:28.970] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 4/5) ## INFO [16:52:29.024] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 5/5) ## INFO [16:52:29.078] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 2/5) ## INFO [16:52:29.272] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 3/5) ## INFO [16:52:29.328] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 5/5) ## INFO [16:52:29.383] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 1/5) ## INFO [16:52:29.436] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 2/5) ## INFO [16:52:29.492] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 4/5) ## INFO [16:52:29.575] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 4/5) ## INFO [16:52:29.631] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 1/5) ## INFO [16:52:29.686] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 5/5) ## INFO [16:52:29.741] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 3/5) ## INFO [16:52:29.796] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 2/5) print(dml_plr_obj) ## ================= DoubleMLPLR Object ================== ## ## ## ------------------ Data summary ------------------ ## Outcome variable: y ## Treatment variable(s): d ## Covariates: X1, X2, X3, X4, X5, X6, X7, X8 ## Instrument(s): ## No. Observations: 4406 ## ## ------------------ Score &amp; algorithm ------------------ ## Score function: partialling out ## DML algorithm: dml1 ## ## ------------------ Machine learner ------------------ ## ml_g: regr.ranger ## ml_m: regr.ranger ## ## ------------------ Resampling ------------------ ## No. folds: 5 ## No. repeated sample splits: 3 ## Apply cross-fitting: TRUE ## ## ------------------ Fit summary ------------------ ## Estimates and significance testing of the effect of target variables ## Estimate. Std. Error t value Pr(&gt;|t|) ## d 1.0100 0.2423 4.168 3.07e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 References "],["hetero.html", "Chapter 8 条件付き平均効果関数の推定 8.1 パッケージ 8.2 データ 8.3 Casual Forest 8.4 Distribution of predicted individual effects 8.5 Best linear predictors 8.6 Tree presentation", " Chapter 8 条件付き平均効果関数の推定 8.1 パッケージ library(tidyverse) library(AER) library(grf) library(rpart) library(rpart.plot) 8.2 データ data(&quot;NMES1988&quot;) raw &lt;- na.omit(NMES1988) raw &lt;- mutate(raw, no_insurance = if_else(insurance == &quot;no&quot;,1, 0)) Y &lt;- raw$visits D &lt;- raw$no_insurance X &lt;- model.matrix(~ - 1+ region + age + afam + gender + school, raw) set.seed(123) 8.3 Casual Forest fit &lt;- regression_forest(X = X, Y = Y) Y.hat &lt;- predict(fit)$predictions fit &lt;- regression_forest(X = X, Y = D) D.hat &lt;- predict(fit)$predictions fit.CF &lt;- causal_forest(X = X, W = D, Y = Y, Y.hat = Y.hat, W.hat = D.hat) df &lt;- mutate(raw, tau.grf = predict(fit.CF)$predictions) 8.4 Distribution of predicted individual effects ggplot(df, aes(x = tau.grf) ) + geom_histogram() 8.5 Best linear predictors best_linear_projection(fit.CF,X) ## ## Best linear projection of the conditional average treatment effect. ## Confidence intervals are cluster- and heteroskedasticity-robust (HC3): ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -0.878656 3.080563 -0.2852 0.77548 ## regionnortheast -1.833887 0.771118 -2.3782 0.01744 * ## regionmidwest -1.143741 0.707519 -1.6166 0.10605 ## regionwest -0.058262 0.850668 -0.0685 0.94540 ## age 0.158464 0.378459 0.4187 0.67545 ## afamyes 0.330666 0.759248 0.4355 0.66321 ## gendermale -0.246440 0.554706 -0.4443 0.65687 ## school -0.083785 0.075749 -1.1061 0.26875 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 8.6 Tree presentation fit &lt;- rpart(tau.grf ~ region + age + afam + gender + school + medicaid, df, control = rpart.control(cp = 0, maxdepth = 2) ) rpart.plot(fit) "],["RD.html", "Chapter 9 Regression-discontinuity 9.1 問題意識 9.2 パッケージ &amp; データ 9.3 Shap disconiniuity", " Chapter 9 Regression-discontinuity Regression discontinuityに基づく推定方法を紹介 Chapter 9.1 : Regression discontinuityにおける問題意識を紹介 Chapter 9.3 : Sharp designに基づく推定方法を紹介 9.1 問題意識 識別の仮定：ある変数\\(X\\)について、以下の条件を満たすcutoff \\(c\\)が存在する \\(\\lim_{x\\uparrow c}\\Pr[D_i=d|X=x]\\neq \\lim_{x\\downarrow c}\\Pr[D_i=d|X=x]\\): 原因変数の分布がcutoffの前後で非連続的に変化している 通常、Cutoffの近傍には少数のサンプルしかないので、外挿する必要がある。 Local polynomial regressionによる局所的外挿は、rdrobustパッケージ (Calonico et al. 2021)により実装できる。 同パッケージによる実装も含んだ包括的な入門は Cattaneo, Idrobo, and Titiunik (2019b), Cattaneo, Idrobo, and Titiunik (2019a). 9.2 パッケージ &amp; データ Rdrobustに同梱されれいるExample data (Cattaneo, Frandsen, and Titiunik 2015)を使用 選挙における現職効果（現在議席を得ている候補者のほうが選挙で有利になる）を推定 running variable \\(=\\) margin (前回の選挙におけるライバル政党との得票率差) cutoff \\(=\\) 0 (差がない) outcome variable \\(=\\) vote (選挙における得票率) library(rdrobust) library(tidyverse) data(&quot;rdrobust_RDsenate&quot;) raw &lt;- rdrobust_RDsenate 9.3 Shap disconiniuity 推計前に\\(X\\)と\\(Y\\)についての散布図を確認することを推奨 raw |&gt; ggplot(aes(x = margin, y = vote) ) + geom_point() + geom_vline(xintercept = 0) 初期設定では2nd oder local polynominalを利用 (Gelman and Imbens (2019) の推奨) Y &lt;- raw$vote X &lt;- raw$margin rdplot(y = Y, x = X) 推定結果表 + 標準誤差 rdrobust(y = Y, x = X) |&gt; summary() ## Call: rdrobust ## ## Number of Obs. 1297 ## BW type mserd ## Kernel Triangular ## VCE method NN ## ## Number of Obs. 595 702 ## Eff. Number of Obs. 360 323 ## Order est. (p) 1 1 ## Order bias (q) 2 2 ## BW est. (h) 17.754 17.754 ## BW bias (b) 28.028 28.028 ## rho (h/b) 0.633 0.633 ## Unique Obs. 595 665 ## ## ============================================================================= ## Method Coef. Std. Err. z P&gt;|z| [ 95% C.I. ] ## ============================================================================= ## Conventional 7.414 1.459 5.083 0.000 [4.555 , 10.273] ## Robust - - 4.311 0.000 [4.094 , 10.919] ## ============================================================================= References "],["panel.html", "Chapter 10 Panel data 10.1 パッケージ 10.2 Data 10.3 識別: Pallarel trend in the two-by-two case 10.4 推定: Two-way fixed effect model 10.5 推定:Weighted two-way fixed effect model", " Chapter 10 Panel data \\(\\{Y_{it},D_{it},X_{it}\\}\\)が観察できるデータを想定する \\(i:\\)回答者、\\(t:\\)回答時点 10.1 パッケージ library(tidyverse) library(estimatr) library(AER) library(did) # weighted two-way fixed effect 10.2 Data AERパッケージに含まれるパネルデータPSID7682を利用 595名の回答者について、1976年から1983年までの7期間パネルデータ data(&quot;PSID7682&quot;) data &lt;- PSID7682 |&gt; group_by(id) |&gt; mutate(period = as.numeric(year), # yearを連続変数化 treatment.time = if_else(married == &quot;yes&quot;, period, 999), treatment.time = min(treatment.time) ) |&gt; # 結婚したperiodを作成(結婚しなかったサンプル = 9999) ungroup() 10.3 識別: Pallarel trend in the two-by-two case 2時点・2グループデータ トリートメントグループ: 2期目に介入を受ける コントロールグループ: 両期間ともに介入を受けない Pallalel trendの仮定 \\(E[Y_{2i}(0)-Y_{1i}(0)|i\\in Treatment]-E[Y_{2i}(0)-Y_{1i}(0)|i\\in Control]\\) 差の差の推定量を推定 \\[E[Y_{i2}|i\\in Treatment]-E[Y_{i1}|i \\in Treatment]\\] \\[-(E[Y_{i2}|i\\in Control]-E[Y_{i1}|i \\in Control])\\] \\[= E[Y_{i2}(1) - Y_{i2}(0)|i \\in Treatment]\\] 10.4 推定: Two-way fixed effect model Two-way fixed effect model \\[E[Y_{it}|D_{it}=d,f_{i},f_{t}]=\\beta_\\tau\\times d + f_i + f_t\\] Two-by-two dataのもとでは、差の差の推定と同値 Two-by-two dataの整備 df &lt;- data |&gt; filter(period &lt;= 2) |&gt; # 1,2期目データ filter(treatment.time == 999 | treatment.time == 2) |&gt; # トリートメント/コントロールグループ mutate(D = if_else(period &gt;= treatment.time, 1, 0) ) # 介入後ダミー Two-way fixed effectの推定 lm_robust(weeks ~ D + factor(period), data = df, clusters = id, fixed_effects = id) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper ## D -1.066667 1.2271177 -0.8692456 0.4713004 -6.0381262 3.904793 ## factor(period)2 1.400000 0.8532526 1.6407803 0.1043726 -0.2953947 3.095395 ## DF ## D 2.135502 ## factor(period)2 89.000000 10.5 推定:Weighted two-way fixed effect model 2期間以上のデータにおいて、parallel trendの仮定に基づいて因果効果を推定する手法 ここでは Callaway and Sant’Anna (2020) を紹介 データ整備 df &lt;- data |&gt; filter(treatment.time != 1) |&gt; mutate(id = as.numeric(id), treatment.time = if_else(treatment.time == 999, 0, treatment.time) ) 推計 fit &lt;- att_gt(yname = &quot;weeks&quot;, tname = &quot;period&quot;, idname = &quot;id&quot;, gname = &quot;treatment.time&quot;, data = df, control_group = 999) fit ## ## Call: ## att_gt(yname = &quot;weeks&quot;, tname = &quot;period&quot;, idname = &quot;id&quot;, gname = &quot;treatment.time&quot;, ## data = df, control_group = 999) ## ## Reference: Callaway, Brantly and Pedro H.C. Sant&#39;Anna. &quot;Difference-in-Differences with Multiple Time Periods.&quot; Forthcoming at the Journal of Econometrics &lt;https://arxiv.org/abs/1803.09015&gt;, 2020. ## ## Group-Time Average Treatment Effects: ## Group Time ATT(g,t) Std. Error [95% Simult. Conf. Band] ## 2 2 -0.9412 1.1141 -3.8628 1.9804 ## 2 3 -2.5455 2.1438 -8.1674 3.0765 ## 2 4 -8.8526 6.8362 -26.7799 9.0746 ## 2 5 -8.2151 8.9402 -31.6598 15.2297 ## 2 6 -1.5055 1.1944 -4.6377 1.6267 ## 2 7 -2.2556 1.8227 -7.0354 2.5243 ## 3 2 -2.3434 0.9669 -4.8791 0.1922 ## 3 3 1.7980 0.6582 0.0720 3.5240 * ## 3 4 0.7228 1.3448 -2.8038 4.2494 ## 3 5 1.0538 0.8182 -1.0918 3.1994 ## 3 6 0.2125 1.2467 -3.0570 3.4819 ## 3 7 1.8111 1.7070 -2.6654 6.2876 ## 4 2 2.5765 5.5783 -12.0520 17.2051 ## 4 3 0.6579 2.0030 -4.5947 5.9104 ## 4 4 -2.7684 1.3128 -6.2112 0.6743 ## 4 5 -1.0860 1.8997 -6.0678 3.8958 ## 4 6 -6.8489 7.6205 -26.8329 13.1351 ## 4 7 0.5833 1.0310 -2.1203 3.2869 ## 5 2 -1.3000 0.8599 -3.5550 0.9550 ## 5 3 -0.8866 1.0178 -3.5556 1.7824 ## 5 4 -0.2742 0.7332 -2.1969 1.6486 ## 5 5 -0.3118 0.9465 -2.7939 2.1703 ## 5 6 -3.4286 5.9839 -19.1209 12.2638 ## 5 7 0.5222 0.6496 -1.1813 2.2257 ## 6 2 -5.3800 2.5041 -11.9468 1.1868 ## 6 3 -7.5206 4.9604 -20.5289 5.4876 ## 6 4 4.8333 3.5856 -4.5696 14.2363 ## 6 5 6.3242 3.5018 -2.8590 15.5074 ## 6 6 -6.2527 2.3378 -12.3833 -0.1222 * ## 6 7 -2.3222 1.0107 -4.9728 0.3283 ## 7 2 -1.2871 0.8470 -3.5084 0.9341 ## 7 3 0.1327 0.6223 -1.4992 1.7645 ## 7 4 -1.7872 0.5678 -3.2762 -0.2982 * ## 7 5 1.7065 0.4807 0.4461 2.9670 * ## 7 6 -2.2778 0.6434 -3.9650 -0.5906 * ## 7 7 0.9556 0.5652 -0.5267 2.4378 ## --- ## Signif. codes: `*&#39; confidence band does not cover 0 ## ## P-value for pre-test of parallel trends assumption: 0 ## Control Group: , Anticipation Periods: 0 ## Estimation Method: Doubly Robust 単純平均効果 fit |&gt; aggte(type = &quot;simple&quot;) |&gt; summary() ## ## Call: ## aggte(MP = fit, type = &quot;simple&quot;) ## ## Reference: Callaway, Brantly and Pedro H.C. Sant&#39;Anna. &quot;Difference-in-Differences with Multiple Time Periods.&quot; Forthcoming at the Journal of Econometrics &lt;https://arxiv.org/abs/1803.09015&gt;, 2020. ## ## ## Overall ATT: ## ATT Std. Error [95% Conf. Int.] ## -1.9877 1.1869 -4.314 0.3386 ## ## ## --- ## Signif. codes: `*&#39; confidence band does not cover 0 ## ## Control Group: , Anticipation Periods: 0 ## Estimation Method: Doubly Robust 動学効果 fit |&gt; aggte(type = &quot;dynamic&quot;) |&gt; ggdid() References "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
