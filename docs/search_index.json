[["index.html", "Rによる比較・予測・因果推論入門 ver0.1 はじめに", " Rによる比較・予測・因果推論入門 ver0.1 川田恵介 2021-05-20 はじめに 本ページでは、定量的な比較、（反実仮想）因果推定、予測分析をRによって行う方法を紹介します。 経済学におけるデータ分析の大部分は、複数の変数間での関係性の理解・利用を目的とします。 ここではある結果変数\\(Y\\)と独立変数（群）\\(X=X_1,...,X_L\\)の関係性に焦点を当てます。 また\\(Y\\)と\\(X\\)がともに観察でき、関心のある母集団からランダムサンプリングされたデータが入手出来ているとします（機械学習における教師付き学習に絞っています）。 より具体的な分析目標は大きく（予測）\\(Y\\)の予測関数の推定、（比較）異なる\\(X\\)間での\\(Y\\)の比較、（因果効果）\\(X\\)の変化が\\(Y\\)に与える因果効果の推定、に大別できます。 ここではそれぞれについて簡単な説明とRのサンプルコードを提供します。 データインポート、整理、可視化を行う関数群を統合的に提供するtidyverseパッケージ(Wickham et al. 2019)の利用を前提にします。 causaldataパッケージ(Huntington-Klein and Barrett 2021)に含まれるclose_collegeを例として使用します。 無料で公開されている有力な参考文献として、以下を推薦します。 機械学習を用いた予測：James et al. (2013) 公開ページ 日本語によるR入門：私たちのR: ベストプラクティスの探究 tidyverseパッケージの利用： 公式ページ "],["intro.html", "Chapter 1 準備", " Chapter 1 準備 オフライン環境の整備 Rのインストール R studioのインストール オンライン環境の整備 R cloudへの登録 "],["データ整備.html", "Chapter 2 データ整備 2.1 新しい変数の作成: mutate (tidyverse) 2.2 変数の限定: select (tidyverse) 2.3 サンプルの除外:filter (tidyverse) 2.4 記述統計表の作成", " Chapter 2 データ整備 AERパッケージに含まれるNMES1988を利用 data(&quot;close_college&quot;, package = &quot;causaldata&quot;) raw &lt;- close_college 2.1 新しい変数の作成: mutate (tidyverse) tidyverseパッケージに含まれるdplyrパッケージ(Wickham et al. 2021)は、有用な関数を提供 library(tidyverse) mutate関数の利用 raw &lt;- mutate(raw, square_exper = exper^2, college = if_else(educ &gt;= 16, 1, 0) ) 2.2 変数の限定: select (tidyverse) select関数の利用 df &lt;- select(raw, black, smsa ) 特定の変数の除外 df &lt;- select(raw, -black, -smsa ) 2.3 サンプルの除外:filter (tidyverse) filter関数の利用 df &lt;- filter(raw, educ &gt;= 7 ) 2.4 記述統計表の作成 記述統計の作成には多くの有益なパッケージが存在 ここではgtsummary(Sjoberg et al. 2021)を使用 library(gtsummary) select関数で必要な変数(lwage, black, south, nearc4)を抜き出し、insuranceごとに連続変数については中央値、カテゴリ変数については頻度を記述 descriptive &lt;- select(raw, college, lwage, black, nearc4) tbl_summary(descriptive, by = college) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #bxztlfkaao .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #bxztlfkaao .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #bxztlfkaao .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #bxztlfkaao .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 4px; border-top-color: #FFFFFF; border-top-width: 0; } #bxztlfkaao .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bxztlfkaao .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #bxztlfkaao .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #bxztlfkaao .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #bxztlfkaao .gt_column_spanner_outer:first-child { padding-left: 0; } #bxztlfkaao .gt_column_spanner_outer:last-child { padding-right: 0; } #bxztlfkaao .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; overflow-x: hidden; display: inline-block; width: 100%; } #bxztlfkaao .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #bxztlfkaao .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #bxztlfkaao .gt_from_md > :first-child { margin-top: 0; } #bxztlfkaao .gt_from_md > :last-child { margin-bottom: 0; } #bxztlfkaao .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #bxztlfkaao .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #bxztlfkaao .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #bxztlfkaao .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #bxztlfkaao .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #bxztlfkaao .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #bxztlfkaao .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #bxztlfkaao .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #bxztlfkaao .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #bxztlfkaao .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #bxztlfkaao .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #bxztlfkaao .gt_sourcenote { font-size: 90%; padding: 4px; } #bxztlfkaao .gt_left { text-align: left; } #bxztlfkaao .gt_center { text-align: center; } #bxztlfkaao .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #bxztlfkaao .gt_font_normal { font-weight: normal; } #bxztlfkaao .gt_font_bold { font-weight: bold; } #bxztlfkaao .gt_font_italic { font-style: italic; } #bxztlfkaao .gt_super { font-size: 65%; } #bxztlfkaao .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Characteristic 0, N = 2,1931 1, N = 8171 Log wages 6.21 (5.90, 6.51) 6.45 (6.14, 6.71) Race: Black 621 (28%) 82 (10%) There is a four-year college in the county 1,451 (66%) 602 (74%) 1 Median (IQR); n (%) 連続変数について、平均値と標準偏差を記述 descriptive &lt;- select(raw, college, lwage, black, nearc4) tbl_summary(descriptive, by = college, statistic = list(all_continuous() ~ &quot;{mean} ({sd})&quot;)) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ogiegrmant .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ogiegrmant .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ogiegrmant .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ogiegrmant .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 4px; border-top-color: #FFFFFF; border-top-width: 0; } #ogiegrmant .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ogiegrmant .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ogiegrmant .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ogiegrmant .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ogiegrmant .gt_column_spanner_outer:first-child { padding-left: 0; } #ogiegrmant .gt_column_spanner_outer:last-child { padding-right: 0; } #ogiegrmant .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; overflow-x: hidden; display: inline-block; width: 100%; } #ogiegrmant .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ogiegrmant .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ogiegrmant .gt_from_md > :first-child { margin-top: 0; } #ogiegrmant .gt_from_md > :last-child { margin-bottom: 0; } #ogiegrmant .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ogiegrmant .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #ogiegrmant .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ogiegrmant .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #ogiegrmant .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ogiegrmant .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ogiegrmant .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ogiegrmant .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ogiegrmant .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ogiegrmant .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #ogiegrmant .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ogiegrmant .gt_sourcenote { font-size: 90%; padding: 4px; } #ogiegrmant .gt_left { text-align: left; } #ogiegrmant .gt_center { text-align: center; } #ogiegrmant .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ogiegrmant .gt_font_normal { font-weight: normal; } #ogiegrmant .gt_font_bold { font-weight: bold; } #ogiegrmant .gt_font_italic { font-style: italic; } #ogiegrmant .gt_super { font-size: 65%; } #ogiegrmant .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Characteristic 0, N = 2,1931 1, N = 8171 Log wages 6.20 (0.43) 6.43 (0.43) Race: Black 621 (28%) 82 (10%) There is a four-year college in the county 1,451 (66%) 602 (74%) 1 Mean (SD); n (%) "],["可視化.html", "Chapter 3 可視化 3.1 Y=連続、Xカテゴリ 3.2 Y=連続、X=連続", " Chapter 3 可視化 引き続きcausaldataに含まれるclose_collegeを使用 data(&quot;close_college&quot;, package = &quot;causaldata&quot;) raw &lt;- close_college raw &lt;- mutate(raw, college = if_else(educ &gt;= 16,&quot;More than college&quot;,&quot;Less than college&quot;)) tidyverseに含まれるggplot2パッケージ(Wickham et al. 2020)を利用 library(tidyverse) 3.1 Y=連続、Xカテゴリ 3.1.1 ヒストグラム: geom_histogram (tidyverse) 医療機関の利用回数 ggplot(raw, aes(x = lwage) ) + geom_histogram() 学歴別賃金分布 ggplot(raw, aes(x = lwage, fill = college) ) + geom_histogram(position = &quot;identity&quot;, alpha = 0.5) 人種・学歴別の賃金分布 ggplot(raw, aes(x = lwage, fill = college) ) + geom_histogram(position = &quot;identity&quot;, alpha = 0.5 ) + facet_wrap(~ black) 3.1.2 密度: geom_density (tidyverse) 人種・学歴別の賃金分布 ggplot(raw, aes(x = lwage, fill = college) ) + geom_density(position = &quot;identity&quot;, alpha = 0.5 ) + facet_wrap(~ black) 3.1.3 Boxplot: geom_boxplot (tidyverse) ggplot(raw, aes(y = lwage, x = college) ) + geom_boxplot() 3.2 Y=連続、X=連続 3.2.1 散布図: geom_point (tidyverse) 散布図：連続変数間の関係性を可視化する図 ggplot(raw, aes(x = exper, y = lwage) ) + geom_point() サンプルサイズが大きくなると機能しない 3.2.2 ヒートマップ: geom_bin2d (tidyverse) 代替案はヒートマップ ggplot(raw, aes(x = exper, y = lwage) ) + geom_bin2d() "],["prediction.html", "Chapter 4 予測 4.1 問題設定 4.2 データの導入 4.3 データ分割 4.4 OLS 4.5 LASSO 4.6 Rdige 4.7 Bagging 4.8 Random Forest", " Chapter 4 予測 4.1 問題設定 データと同じ母集団から新しくランダムサンプリングされ、\\(X\\)のみが観察できるサンプルについて\\(Y\\)の値を予測することを目的とします。 具体的には、事前に定義する損失関数の期待値を最小化するような、予測関数\\(f(X)\\)の推定をめざします。 以下ではMean squared error(MSE)を損失関数として用います。 所与の\\(f(X)\\)、母分布に従う確率変数\\(Y,X\\)についてMSEは以下のように定義されます。 \\[MSE = E_{X,Y}[(Y_i-f(X_i))^2]\\] 一般にMSEは以下のように書き換えられます。 \\[MSE = \\underbrace{E_{X,Y}[(Y_i-\\bar{Y}(X_i))^2]}_{Irreducible\\ error}+\\underbrace{E_{X,Y}[(\\bar{Y}(X_i)-f(X_i))^2]}_{Reducible\\ error}\\] ただし\\(\\bar{Y}(X_i)=E[Y_i|X_i]\\)。 上記式から以下が確認できます。 最善の予測関数は条件付き母平均\\(\\bar{Y}(X_i)\\)(Reducible error = 0) 最善の予測関数のもとでも削減不可能なエラー(Irreducible error)が存在 予測関数の推定 \\(=\\) Reducible errorの削減 \\(=\\) 条件付き母平均との乖離(MSE)の削減 4.1.1 Bias-Variance tradeoff 実際の\\(f(X_i)\\)はランダムサンプリングされたデータから推定される必要があり、実際には確率分布を持ちます。 Reducible errorは一般に以下のように書き換えられます。 \\[E_{Y,X,f(X)}[(\\bar{Y}(X_i)-f(X_i))^2]\\] \\[=\\underbrace{(E_{Y,X,f(X)}[\\bar{Y}(X_i)-\\bar{f}(X_i)])^2}_{Bias}+\\underbrace{E_{Y,X,f(X)}[(\\bar{f}(X_i)-f(X_i))^2]}_{Variance}.\\] ただし\\(\\bar{f}(X_i)=f(X_i)\\)。 上記式は推定される予測関数が平均的にどの程度条件付き母平均を近似できているのか(Biasがどの程度小さいのか)だけでなく、予測関数の分布がどの程度散らばっているのか（VArianceがどの程度大木のか）、についても考慮する必要があることを示しています。 母平均\\(\\bar Y(X_i)\\)が単純な既知の関数形に従い、かつサンプルサイズが大きい場合、OLS推定された\\(f(X_i)\\)は\\(Bias=0\\)かつ小さいVarianceを達成します。 しかしながら社会科学における多くの応用においては、\\(\\bar Y(X_i)\\)は未知かつ複雑であることが予想され、その複雑さに対してサンプルサイズが小さいことを想定する必要があります。 このような状況では、OLSやサブサンプル平均により推定された予測モデルは、Bias-Variance tradeoffに直面します。 少ないパラメータ（短い回帰式、少ないサブサンプル分割）を推定する場合、大きなBiasを持つ 多くのパラメータ（長い回帰式、多いサブサンプル分割）を推定する場合、大きなVarianceを持つ。 Bias-variance tradeoffを分析者が解くこと（最善のモデル設定を行うこと）は困難です。Chapter 4 で紹介するLASSO/Ridge/Random Forestなどの手法は、bias-varianceのバランスをよりデータ主導型かつ現実的な計算時間で達成することを目指します。 4.2 データの導入 引き続きcausaldataに含まれるclose_collegeを使用 data(&quot;close_college&quot;, package = &quot;causaldata&quot;) raw &lt;- na.omit(close_college) set.seed(111) 4.3 データ分割 ここでは5個のデータに分割する。 group &lt;- sample(1:5, size = nrow(raw), replace = TRUE) 4.4 OLS 線形予測関数\\(f(X)=\\beta_0 + \\beta_1X_1+...+\\beta_LX_L\\)を仮定し、最小二乗法にて推定する。 fit &lt;- lm(lwage ~ ., data = raw[group != 1,]) coef(fit) ## (Intercept) nearc4 educ black smsa south ## 5.030046385 0.003468402 0.072758365 -0.167960355 0.166989463 -0.134753589 ## married exper ## -0.033676367 0.035239316 予測値の導出 Y.hat &lt;- predict(fit,raw) テストデータへの適合 mean((raw$lwage - Y.hat)[group == 1]^2) ## [1] 0.142237 訓練データへの適合 mean((raw$lwage - Y.hat)[group != 1]^2) ## [1] 0.1354462 4.5 LASSO glmentパッケージ(Friedman et al. 2021)を利用 library(glmnet) Y &lt;- raw$lwage X &lt;- model.matrix(lwage ~ -1 + . + .^2 + I(exper^2) + I(educ^2), data = raw) cv &lt;- cv.glmnet(x = X[group != 1,], y = Y[group != 1], alpha = 1) fit &lt;- glmnet(x = X[group != 1,], y = Y[group != 1], alpha = 1, lambda = cv$lambda.min) 予測モデルの確認 coef(fit) ## 31 x 1 sparse Matrix of class &quot;dgCMatrix&quot; ## s0 ## (Intercept) 5.667564893 ## nearc4 . ## educ . ## black . ## smsa 0.127160210 ## south -0.053994473 ## married -0.017814635 ## exper . ## I(exper^2) . ## I(educ^2) 0.001547367 ## nearc4:educ . ## nearc4:black -0.003107307 ## nearc4:smsa 0.012814596 ## nearc4:south . ## nearc4:married -0.009110601 ## nearc4:exper 0.001645024 ## educ:black . ## educ:smsa 0.002555529 ## educ:south . ## educ:married . ## educ:exper 0.003005740 ## black:smsa . ## black:south -0.089190484 ## black:married . ## black:exper -0.012069810 ## smsa:south . ## smsa:married -0.008329727 ## smsa:exper . ## south:married . ## south:exper -0.005957980 ## married:exper . 予測値の導出 Y.hat &lt;- predict(fit,X) テストデータへの適合 mean((Y - Y.hat)[group == 1]^2) ## [1] 0.1413525 訓練データへの適合 mean((Y - Y.hat)[group != 1]^2) ## [1] 0.1319419 4.6 Rdige 引き続きglmentパッケージ(Friedman et al. 2021)を利用 cv &lt;- cv.glmnet(x = X[group != 1,], y = Y[group != 1], alpha = 0) fit &lt;- glmnet(x = X[group != 1,], y = Y[group != 1], alpha = 0, lambda = cv$lambda.min) 予測モデルの確認 coef(fit) ## 31 x 1 sparse Matrix of class &quot;dgCMatrix&quot; ## s0 ## (Intercept) 5.5508950236 ## nearc4 -0.0160811741 ## educ 0.0193451667 ## black -0.0135451008 ## smsa 0.0564553828 ## south -0.0573312719 ## married -0.0147399830 ## exper 0.0088694853 ## I(exper^2) -0.0001197461 ## I(educ^2) 0.0008694055 ## nearc4:educ 0.0016364590 ## nearc4:black -0.0297573938 ## nearc4:smsa 0.0167109589 ## nearc4:south 0.0026651299 ## nearc4:married -0.0128032023 ## nearc4:exper 0.0030208076 ## educ:black -0.0001386467 ## educ:smsa 0.0056602610 ## educ:south 0.0006245027 ## educ:married 0.0001992814 ## educ:exper 0.0021310446 ## black:smsa 0.0136129160 ## black:south -0.0879085260 ## black:married 0.0009328480 ## black:exper -0.0100762075 ## smsa:south 0.0008590199 ## smsa:married -0.0101543657 ## smsa:exper 0.0032239513 ## south:married -0.0035170205 ## south:exper -0.0059956062 ## married:exper -0.0001976978 予測値の導出 Y.hat &lt;- predict(fit,X) テストデータへの適合 mean((Y - Y.hat)[group == 1]^2) ## [1] 0.1406931 訓練データへの適合 mean((Y - Y.hat)[group != 1]^2) ## [1] 0.1320938 4.6.1 No penalty library(glmnet) Y &lt;- raw$lwage X &lt;- model.matrix(lwage ~ -1 + . + .^2 + I(exper^2) + I(educ^2), data = raw) fit &lt;- glmnet(x = X[group != 1,], y = Y[group != 1], alpha = 1, lambda = 0) 予測値の導出 Y.hat &lt;- predict(fit,X) テストデータへの適合 mean((Y - Y.hat)[group == 1]^2) ## [1] 0.1423122 訓練データへの適合 mean((Y - Y.hat)[group != 1]^2) ## [1] 0.1305727 4.7 Bagging rangerパッケージ(Wright, Wager, and Probst 2020)を利用 library(ranger) X &lt;- model.matrix(lwage ~ -1 + ., data = raw) fit &lt;- ranger(x = X[group != 1,], y = Y[group != 1], num.trees = 2000, mtry = ncol(X)) 予測値の計算 Y.hat &lt;- predict(fit,X)$predictions テストデータへの適合 mean((Y - Y.hat)[group == 1]^2) ## [1] 0.1696248 訓練データへの適合 mean((Y - Y.hat)[group != 1]^2) ## [1] 0.07731462 4.8 Random Forest rangerパッケージ(Wright, Wager, and Probst 2020)を利用 library(ranger) fit &lt;- ranger(x = X[group != 1,], y = Y[group != 1], num.trees = 2000) 予測値の計算 Y.hat &lt;- predict(fit,X)$predictions テストデータへの適合 mean((Y - Y.hat)[group == 1]^2) ## [1] 0.1442581 訓練データへの適合 mean((Y - Y.hat)[group != 1]^2) ## [1] 0.1130864 "],["比較因果推論.html", "Chapter 5 比較・因果推論 5.1 比較 5.2 因果効果", " Chapter 5 比較・因果推論 5.1 比較 Chapter 6 の背後にある問題意識・方針を紹介します。 5.1.1 問題設定 変数\\(D\\)の値が異なる集団間において、結果変数\\(Y\\)の分布がどの程度異なっているのか、推定します。 その際直接的な関心ではない変数群\\(X\\)は一定であるとします。 以下の議論では\\(Y\\)の平均値に焦点を当て、\\(E[Y|D=d,X]-E[Y|D=d&#39;,X]\\)の推定を目指します。 またこの際に点推定量のみならず、信頼区間の推定も行います。 5.1.2 High-dimentional X 多数の\\(X\\)で条件づける必要がある場合、重回帰やマッチング法などの手法の有効性が失われます。 これは予測で問題となった大きすぎるvarianceが生じてしまうためです。 なお\\(X\\)が少数であったとしても、定式化の自由度（高次項や交差項の導入）を持たせた場合、同様の問題が生じます。 この問題を回避するためにChapter 6 では、LASSOやRandom Forestなどの予測手法の応用を紹介します。 5.2 因果効果 引き続きChapter 6 の背後にある問題意識・方針を紹介します。 5.2.1 問題設定 ある集団の変数\\(D\\)を変化させた場合、結果変数\\(Y\\)の分布がどのように変化するのか、因果効果を推定します。 5.2.2 識別の問題 因果効果を推定する際には、識別条件をまず議論する必要があります。 識別条件：「仮にサンプルサイズが無限大である」場合、どのような仮定の下で因果効果を推定できるか？ 本ページでは\\(D\\)の条件付きランダム化（\\(X\\)が均一のグループ内では、\\(D\\)の値がランダムに決定されている）の仮定に基づき議論していきます。 この仮定のもとで\\(D\\)の因果効果は、\\(E[Y|D=d,X]-E[Y|D=d&#39;,X]\\)によって識別できます。 代替的な識別条件も複数存在 5.2.3 推定の問題 識別条件はしばしば多数の\\(X\\)について、条件づけた平均差の推定を要求されます このような状況では比較の問題と同様に、機械学習の応用が有益となります。 "],["unique.html", "Chapter 6 Constant parameterの推定 6.1 データ 6.2 部分線形モデルに基づく推定", " Chapter 6 Constant parameterの推定 （条件付き）平均差を推定する。 点推定だけでなく、信頼区間も推定する。 6.1 データ library(tidyverse) data(&quot;close_college&quot;, package = &quot;causaldata&quot;) raw &lt;- na.omit(close_college) raw &lt;- mutate(raw, college = if_else(educ &gt;= 16, 1, 0)) set.seed(111) 6.2 部分線形モデルに基づく推定 部分線形モデルに関心のあるパラメータを埋め込む \\[E[Y|D=d,X=x]=\\underbrace{\\tau}_{Interest\\ parameter}\\times d+\\underbrace{f(x)}_{Nuisance\\ function}\\] 6.2.1 OLS by lm_robust (estimatr) \\(\\tau(x)=\\tau,f(x)=\\beta_0+\\beta_1x_1+...+\\beta_Lx_L\\)と特定化 サンプル内MSEを最大化するように推定 robust standard errorを計算するためにestimatrパッケージ(Blair et al. 2021)を利用 library(estimatr) lm_robust関数で推定 lm_robust(lwage ~ college + nearc4 + black, data = raw) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower ## (Intercept) 6.1952536 0.01454122 426.047636 0.000000e+00 6.16674178 ## college 0.1695215 0.01767448 9.591315 1.762574e-21 0.13486616 ## nearc4 0.1240253 0.01582735 7.836142 6.399135e-15 0.09299177 ## black -0.2744157 0.01771864 -15.487400 4.169409e-52 -0.30915760 ## CI Upper DF ## (Intercept) 6.2237653 2999 ## college 0.2041768 2999 ## nearc4 0.1550589 2999 ## black -0.2396738 2999 発展:推計結果表 tidy関数により推定結果data.frameに変化することで、kable関数(knitrパッケージ)による推計結果表の整形、geom_pointrange関数による可視化が可能 点推定値(estimate)、標準誤差(std.error)のみを残した推計結果表 library(knitr) library(tidyverse) fit &lt;- lm_robust(lwage ~ college + nearc4 + black, data = raw) fit &lt;- tidy(fit) fit &lt;- select(fit, term, estimate, std.error) kable(fit, digits = 2) term estimate std.error (Intercept) 6.20 0.01 college 0.17 0.02 nearc4 0.12 0.02 black -0.27 0.02 fit &lt;- filter(fit, term == &quot;college&quot;) kable(fit, digits = 2) term estimate std.error college 0.17 0.02 発展:Dot-and-Whisker plotによる可視化 Dot-and-Whisker図により点推定量と信頼区間を可視化 fit &lt;- lm_robust(lwage ~ college + nearc4 + black, data = raw) fit &lt;- tidy(fit) fit &lt;- filter(fit, term != &quot;(Intercept)&quot;) ggplot(fit, aes(y = term, x = estimate, xmin = conf.low, xmax = conf.high)) + geom_pointrange() fit &lt;- filter(fit, term == &quot;college&quot;) ggplot(fit, aes(y = term, x = estimate, xmin = conf.low, xmax = conf.high)) + geom_pointrange() + geom_vline(xintercept = 0) 6.2.2 ロビンソン変換 部分線形モデルをロビンソン変換(Robinson 1988) \\[Y_i-\\underbrace{E[Y_i|X_i]}_{Nuisance\\ term}=\\tau\\times [D_i-\\underbrace{E[D_i|X_i]}_{Nuisance\\ term}]+u_i\\] \\(E[Y_i|X_i],E[D_i|X_i]\\)を予測関数として推定し、予測誤差間を単回帰すればよい 実際には\\(E[Y_i|X_i],E[D_i|X_i]\\)は未知の関数なので何らかの方法で推定する必要がある。関数の推定なので予測の手法が適用できる。 6.2.2.1 Double selection: rlassoEffect (hdm) 2重選択法(Belloni, Chernozhukov, and Hansen 2014)を紹介 LASSOにより\\(Y_i,D_i\\)の両方あるいはどちらか一方を予測する上でrelevantな\\(X^c\\)を特定しコントロールする \\(Y_i,D_i\\)どちらの予測にもrelevantではない変数は除外する hdmパッケージ(Spindler, Chernozhukov, and Hansen 2019)を利用 library(hdm) Y &lt;- raw$lwage D &lt;- raw$college X &lt;- model.matrix(~ - 1+ black + nearc4 + black:nearc4, raw) fit &lt;- rlassoEffect(x = X, y = Y, d = D, method = &quot;double selection&quot;) 推定結果 summary(fit) ## [1] &quot;Estimates and significance testing of the effect of target variables&quot; ## Estimate. Std. Error t value Pr(&gt;|t|) ## d1 0.16952 0.01767 9.594 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 選択されたコントロール変数 fit$selection.index ## black nearc4 black:nearc4 ## TRUE TRUE FALSE 6.2.2.2 Double Machine Learning (DoubleML) Double Machine Learning法(Chernozhukov et al. 2018)を紹介 なんらかの方法（例、OLS、ランダムフォレスト、LASSO）で\\(E[Y|X],E[D|X]\\)の予測関数\\(f_Y(X),f_D(X)\\)を推定し、予測誤差を単回帰 DoubleMLパッケージ(Bach et al. 2021)を利用 library(DoubleML) library(mlr3) library(mlr3learners) library(data.table) learner &lt;- lrn(&quot;regr.ranger&quot;, num.trees = 100) # Require bigger num.trees in practice ml_g &lt;- learner$clone() ml_m &lt;- learner$clone() obj_dml_data &lt;- double_ml_data_from_matrix(X = X, y = as.numeric(Y), d = as.numeric(D)) dml_plr_obj &lt;- DoubleMLPLR$new(obj_dml_data, ml_g, ml_m, dml_procedure=&quot;dml1&quot;, n_rep = 3) dml_plr_obj$fit() ## INFO [18:23:46.435] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 1/5) ## INFO [18:23:46.542] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 5/5) ## INFO [18:23:46.611] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 3/5) ## INFO [18:23:46.658] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 4/5) ## INFO [18:23:46.704] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 2/5) ## INFO [18:23:46.996] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 3/5) ## INFO [18:23:47.044] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 5/5) ## INFO [18:23:47.090] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 2/5) ## INFO [18:23:47.136] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 4/5) ## INFO [18:23:47.181] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 1/5) ## INFO [18:23:47.343] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 4/5) ## INFO [18:23:47.386] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 1/5) ## INFO [18:23:47.428] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 3/5) ## INFO [18:23:47.469] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 2/5) ## INFO [18:23:47.509] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 5/5) ## INFO [18:23:47.622] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 4/5) ## INFO [18:23:47.659] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 1/5) ## INFO [18:23:47.698] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 3/5) ## INFO [18:23:47.739] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 2/5) ## INFO [18:23:47.781] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 5/5) ## INFO [18:23:47.934] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 2/5) ## INFO [18:23:47.979] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 4/5) ## INFO [18:23:48.029] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 5/5) ## INFO [18:23:48.071] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 1/5) ## INFO [18:23:48.115] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 3/5) ## INFO [18:23:48.235] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 5/5) ## INFO [18:23:48.279] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 1/5) ## INFO [18:23:48.325] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 4/5) ## INFO [18:23:48.366] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 2/5) ## INFO [18:23:48.405] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 3/5) print(dml_plr_obj) ## ================= DoubleMLPLR Object ================== ## ## ## ------------------ Data summary ------------------ ## Outcome variable: y ## Treatment variable(s): d ## Covariates: X1, X2, X3 ## Instrument(s): ## No. Observations: 3003 ## ## ------------------ Score &amp; algorithm ------------------ ## Score function: partialling out ## DML algorithm: dml1 ## ## ------------------ Machine learner ------------------ ## ml_g: regr.ranger ## ml_m: regr.ranger ## ## ------------------ Resampling ------------------ ## No. folds: 5 ## No. repeated sample splits: 3 ## Apply cross-fitting: TRUE ## ## ------------------ Fit summary ------------------ ## [1] &quot;Estimates and significance testing of the effect of target variables&quot; ## Estimate. Std. Error t value Pr(&gt;|t|) ## d 0.17364 0.01769 9.817 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 "],["references.html", "References", " References Bach, Philipp, Victor Chernozhukov, Malte S. Kurz, and Martin Spindler. 2021. DoubleML: Double Machine Learning in r. https://CRAN.R-project.org/package=DoubleML. Belloni, Alexandre, Victor Chernozhukov, and Christian Hansen. 2014. “Inference on Treatment Effects After Selection Among High-Dimensional Controls.” The Review of Economic Studies 81 (2): 608–50. Blair, Graeme, Jasper Cooper, Alexander Coppock, Macartan Humphreys, and Luke Sonnet. 2021. Estimatr: Fast Estimators for Design-Based Inference. https://CRAN.R-project.org/package=estimatr. Chernozhukov, Victor, Denis Chetverikov, Mert Demirer, Esther Duflo, Christian Hansen, Whitney Newey, and James Robins. 2018. “Double/Debiased Machine Learning for Treatment and Structural Parameters: Double/Debiased Machine Learning.” The Econometrics Journal 21 (1). Friedman, Jerome, Trevor Hastie, Rob Tibshirani, Balasubramanian Narasimhan, Kenneth Tay, and Noah Simon. 2021. Glmnet: Lasso and Elastic-Net Regularized Generalized Linear Models. https://CRAN.R-project.org/package=glmnet. Huntington-Klein, Nick, and Malcolm Barrett. 2021. Causaldata: Example Data Sets for Causal Inference Textbooks. https://CRAN.R-project.org/package=causaldata. James, Gareth, Daniela Witten, Trevor Hastie, and Robert Tibshirani. 2013. An Introduction to Statistical Learning. Vol. 112. Springer. Robinson, Peter. 1988. “Root-n-Consistent Semiparametric Regression.” Econometrica 56 (4): 931–54. Sjoberg, Daniel D., Michael Curry, Margie Hannum, Joseph Larmarange, Karissa Whiting, and Emily C. Zabor. 2021. Gtsummary: Presentation-Ready Data Summary and Analytic Result Tables. https://CRAN.R-project.org/package=gtsummary. Spindler, Martin, Victor Chernozhukov, and Christian Hansen. 2019. Hdm: High-Dimensional Metrics. https://CRAN.R-project.org/package=hdm. Wickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain Francois, Garrett Grolemund, et al. 2019. “Welcome to the tidyverse.” Journal of Open Source Software 4 (43): 1686. https://doi.org/10.21105/joss.01686. Wickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, and Dewey Dunnington. 2020. Ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics. https://CRAN.R-project.org/package=ggplot2. Wickham, Hadley, Romain Francois, Lionel Henry, and Kirill Muller. 2021. Dplyr: A Grammar of Data Manipulation. https://CRAN.R-project.org/package=dplyr. Wright, Marvin N., Stefan Wager, and Philipp Probst. 2020. Ranger: A Fast Implementation of Random Forests. https://github.com/imbs-hl/ranger. "]]
