[["index.html", "Rによる比較・予測・因果推論入門 ver0.1 はじめに", " Rによる比較・予測・因果推論入門 ver0.1 川田恵介 2021-06-18 はじめに 定量的な比較、（反実仮想）因果推定、予測分析をRによって行う方法を紹介 経済学におけるデータ分析の大部分は、複数の変数間での関係性の理解・利用を目的としている。 本ページでは、ある結果変数\\(Y\\)と独立変数（群）\\(X=X_1,...,X_L\\)の関係性に焦点を当てる。 また\\(Y\\)と\\(X\\)がともに観察でき、関心のある母集団からランダムサンプリングされたデータが入手出来ている。 具体的な分析目標は大きく（予測）\\(Y\\)の予測関数の推定、（比較）異なる\\(X\\)間での\\(Y\\)の比較、（因果効果）\\(X\\)の変化が\\(Y\\)に与える因果効果の推定、に大別できる。 本ページの目的はそれぞれについて簡単な説明とRのサンプルコードの提供 データインポート、整理、可視化を行う関数群を統合的に提供するtidyverseパッケージ (Wickham et al. 2019)の利用 Example dataとしては、AERパッケージ (Kleiber and Zeileis 2008)に含まれる(the US National Medical Expenditure Survey, NMES1988)を利用 無料で公開されている有力な参考文献として、以下を推薦 機械学習を用いた予測：James et al. (2013) 公開ページ 日本語によるR入門：私たちのR: ベストプラクティスの探究 tidyverseパッケージの利用： 公式ページ "],["intro.html", "Chapter 1 準備", " Chapter 1 準備 オフライン環境の整備 Rのインストール R studioのインストール オンライン環境の整備 R cloudへの登録 "],["データ整備.html", "Chapter 2 データ整備 2.1 tidyerseパッケージのインストール 2.2 新しい変数の作成: mutate (tidyverse) 2.3 変数の限定: select (tidyverse) 2.4 サンプルの除外:filter (tidyverse) 2.5 pipe演算子 2.6 記述統計表の作成", " Chapter 2 データ整備 パッケージ：追加関数やデータなどのバンドル AERパッケージに含まれるNMES1988を利用 data(&quot;NMES1988&quot;, package = &quot;AER&quot;) raw &lt;- NMES1988 2.1 tidyerseパッケージのインストール tidyverseパッケージ：、データ導入、整備、可視化等、多岐にわたる有益な関数を提供 library(tidyverse) 2.2 新しい変数の作成: mutate (tidyverse) mutate関数の利用 df &lt;- mutate(raw, age_2 = age^2 # 年齢の二乗項を作成 ) 2.3 変数の限定: select (tidyverse) select関数の利用 df &lt;- select(raw, age, income ) 特定の変数の除外 df &lt;- select(raw, -age, -income ) 2.4 サンプルの除外:filter (tidyverse) filter関数の利用 df &lt;- filter(raw, visits &gt;= 7 ) 2.5 pipe演算子 tidyverseパッケージに含まれるmagritterパッケージは、pipe演算子(%&gt;%)を提供する pipe演算子：二つの入力X1,X2から出力Yを得る関数fについて、pipe演算子を用いると、Y &lt;- X1 %&gt;% f(X2)と書き換えられる pipe演算子を使わない場合、入力として別の出力結果をもちいるためには、複数のobjectを作成する必要があり煩雑 # visits が7以上かつage2を含んだデータを作成 df &lt;- filter(raw, visits &gt;= 7) df &lt;- mutate(df, age2 = age^2) pipe演算子を使うと、出力結果を直接入力でき、コードの可読性が改善することが期待できる df &lt;- raw %&gt;% # rawが最初の入力 filter(visits &gt;= 7) %&gt;% # visitsが7以上のサンプルに絞る mutate(age2 = age^2) # 年齢の二乗項を作成 2.6 記述統計表の作成 記述統計の作成には多くの有益なパッケージが存在 ここではgtsummary(Sjoberg et al. 2021)を使用 library(gtsummary) select関数で必要な変数(visits, health, medicaid)を抜き出し、insuranceごとに連続変数については中央値、カテゴリ変数については頻度を記述 raw %&gt;% # rawを入力とし select(visits, health, medicaid, insurance ) %&gt;% # 必要な変数を抜き出す tbl_summary(by = insurance) # 記述統計を計算 html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ybfulfsvga .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ybfulfsvga .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ybfulfsvga .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ybfulfsvga .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 4px; border-top-color: #FFFFFF; border-top-width: 0; } #ybfulfsvga .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ybfulfsvga .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ybfulfsvga .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ybfulfsvga .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ybfulfsvga .gt_column_spanner_outer:first-child { padding-left: 0; } #ybfulfsvga .gt_column_spanner_outer:last-child { padding-right: 0; } #ybfulfsvga .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; overflow-x: hidden; display: inline-block; width: 100%; } #ybfulfsvga .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ybfulfsvga .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ybfulfsvga .gt_from_md > :first-child { margin-top: 0; } #ybfulfsvga .gt_from_md > :last-child { margin-bottom: 0; } #ybfulfsvga .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ybfulfsvga .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #ybfulfsvga .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ybfulfsvga .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #ybfulfsvga .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ybfulfsvga .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ybfulfsvga .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ybfulfsvga .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ybfulfsvga .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ybfulfsvga .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #ybfulfsvga .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ybfulfsvga .gt_sourcenote { font-size: 90%; padding: 4px; } #ybfulfsvga .gt_left { text-align: left; } #ybfulfsvga .gt_center { text-align: center; } #ybfulfsvga .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ybfulfsvga .gt_font_normal { font-weight: normal; } #ybfulfsvga .gt_font_bold { font-weight: bold; } #ybfulfsvga .gt_font_italic { font-style: italic; } #ybfulfsvga .gt_super { font-size: 65%; } #ybfulfsvga .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Characteristic no, N = 9851 yes, N = 3,4211 visits 3 (1, 7) 4 (2, 8) health poor 204 (21%) 350 (10%) average 721 (73%) 2,788 (81%) excellent 60 (6.1%) 283 (8.3%) medicaid 341 (35%) 61 (1.8%) 1 Median (IQR); n (%) 連続変数について、平均値と標準偏差を記述 raw %&gt;% select(visits, health, medicaid, insurance ) %&gt;% tbl_summary(by = insurance, statistic = list(all_continuous() ~ &quot;{mean} ({sd})&quot;) # 平均と標準誤差を表示 ) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #wrbnyjmlge .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #wrbnyjmlge .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #wrbnyjmlge .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #wrbnyjmlge .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 4px; border-top-color: #FFFFFF; border-top-width: 0; } #wrbnyjmlge .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #wrbnyjmlge .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #wrbnyjmlge .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #wrbnyjmlge .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #wrbnyjmlge .gt_column_spanner_outer:first-child { padding-left: 0; } #wrbnyjmlge .gt_column_spanner_outer:last-child { padding-right: 0; } #wrbnyjmlge .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; overflow-x: hidden; display: inline-block; width: 100%; } #wrbnyjmlge .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #wrbnyjmlge .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #wrbnyjmlge .gt_from_md > :first-child { margin-top: 0; } #wrbnyjmlge .gt_from_md > :last-child { margin-bottom: 0; } #wrbnyjmlge .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #wrbnyjmlge .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #wrbnyjmlge .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #wrbnyjmlge .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #wrbnyjmlge .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #wrbnyjmlge .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #wrbnyjmlge .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #wrbnyjmlge .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #wrbnyjmlge .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #wrbnyjmlge .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #wrbnyjmlge .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #wrbnyjmlge .gt_sourcenote { font-size: 90%; padding: 4px; } #wrbnyjmlge .gt_left { text-align: left; } #wrbnyjmlge .gt_center { text-align: center; } #wrbnyjmlge .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #wrbnyjmlge .gt_font_normal { font-weight: normal; } #wrbnyjmlge .gt_font_bold { font-weight: bold; } #wrbnyjmlge .gt_font_italic { font-style: italic; } #wrbnyjmlge .gt_super { font-size: 65%; } #wrbnyjmlge .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Characteristic no, N = 9851 yes, N = 3,4211 visits 5 (6) 6 (7) health poor 204 (21%) 350 (10%) average 721 (73%) 2,788 (81%) excellent 60 (6.1%) 283 (8.3%) medicaid 341 (35%) 61 (1.8%) 1 Mean (SD); n (%) "],["可視化.html", "Chapter 3 可視化 3.1 問題設定 3.2 パッケージ 3.3 データ 3.4 連続-カテゴリのケース 3.5 連続-連続のケース", " Chapter 3 可視化 3.1 問題設定 データ内におけるY/X間の関係性を整理・記述することが必要 最有力な手法は可視化 3.2 パッケージ tidyverseに含まれるggplot2パッケージ(Wickham et al. 2020)を利用 library(tidyverse) library(AER) 3.3 データ data(&quot;NMES1988&quot;) raw &lt;- NMES1988 変数のタイプに応じて、変数間の関係性を記述するために有効な図は異なる。 ここでは、Y/Xが共に連続(連続-連続)のケース、Xがカテゴリカル(連続-カテゴリ)なケースについて、代表的な図を紹介する 3.4 連続-カテゴリのケース 3.4.1 ヒストグラム: geom_histogram (tidyverse) 医療機関の利用回数 ggplot(raw, aes(x = visits) ) + geom_histogram() 保険の有無別 ggplot(raw, aes(x = visits, fill = insurance) ) + geom_histogram(position = &quot;identity&quot;, alpha = 0.5) 3.4.2 密度: geom_density (tidyverse) 保険の有無別分布 ggplot(raw, aes(x = visits, fill = insurance) ) + geom_density(position = &quot;identity&quot;, alpha = 0.5) 3.4.3 Boxplot: geom_boxplot (tidyverse) ggplot(raw, aes(y = visits, x = insurance) ) + geom_boxplot() 3.5 連続-連続のケース 3.5.1 散布図: geom_point (tidyverse) 散布図：連続変数間の関係性を可視化する図 ggplot(raw, aes(x = age, y = visits) ) + geom_point() サンプルサイズが大きくなると機能しない 3.5.2 ヒートマップ: geom_bin2d (tidyverse) 代替案はヒートマップ ggplot(raw, aes(x = age, y = visits) ) + geom_bin2d() "],["prediction.html", "Chapter 4 予測 4.1 問題設定 4.2 パッケージ 4.3 データの導入 4.4 データ分割 4.5 OLS 4.6 LASSO 4.7 Ridge 4.8 Bagging 4.9 Random Forest", " Chapter 4 予測 4.1 問題設定 データと同じ母集団から新しくランダムサンプリングされ、\\(X\\)のみが観察できるサンプルについて\\(Y\\)の値を予測することを目的とします。 具体的には、事前に定義する損失関数の期待値を最小化するような、予測関数\\(f(X)\\)の推定をめざします。 以下ではMean squared error(MSE)を損失関数として用います。 所与の\\(f(X)\\)、母分布に従う確率変数\\(Y,X\\)についてMSEは以下のように定義されます。 \\[MSE = E_{X,Y}[(Y_i-f(X_i))^2]\\] 一般にMSEは以下のように書き換えられます。 \\[MSE = \\underbrace{E_{X,Y}[(Y_i-\\bar{Y}(X_i))^2]}_{Irreducible\\ error}+\\underbrace{E_{X,Y}[(\\bar{Y}(X_i)-f(X_i))^2]}_{Reducible\\ error}\\] ただし\\(\\bar{Y}(X_i)=E[Y_i|X_i]\\)。 上記式から以下が確認できます。 最善の予測関数は条件付き母平均\\(\\bar{Y}(X_i)\\)(Reducible error = 0) 最善の予測関数のもとでも削減不可能なエラー(Irreducible error)が存在 予測関数の推定 \\(=\\) Reducible errorの削減 \\(=\\) 条件付き母平均との乖離(MSE)の削減 4.1.1 Bias-Variance tradeoff 実際の\\(f(X_i)\\)はランダムサンプリングされたデータから推定される必要があり、実際には確率分布を持ちます。 Reducible errorは一般に以下のように書き換えられます。 \\[E_{Y,X,f(X)}[(\\bar{Y}(X_i)-f(X_i))^2]\\] \\[=\\underbrace{(E_{Y,X,f(X)}[\\bar{Y}(X_i)-\\bar{f}(X_i)])^2}_{Bias}+\\underbrace{E_{Y,X,f(X)}[(\\bar{f}(X_i)-f(X_i))^2]}_{Variance}.\\] ただし\\(\\bar{f}(X_i)=f(X_i)\\)。 上記式は推定される予測関数が平均的にどの程度条件付き母平均を近似できているのか(Biasがどの程度小さいのか)だけでなく、予測関数の分布がどの程度散らばっているのか（VArianceがどの程度大木のか）、についても考慮する必要があることを示しています。 母平均\\(\\bar Y(X_i)\\)が単純な既知の関数形に従い、かつサンプルサイズが大きい場合、OLS推定された\\(f(X_i)\\)は\\(Bias=0\\)かつ小さいVarianceを達成します。 しかしながら社会科学における多くの応用においては、\\(\\bar Y(X_i)\\)は未知かつ複雑であることが予想され、その複雑さに対してサンプルサイズが小さいことを想定する必要があります。 このような状況では、OLSやサブサンプル平均により推定された予測モデルは、Bias-Variance tradeoffに直面します。 少ないパラメータ（短い回帰式、少ないサブサンプル分割）を推定する場合、大きなBiasを持つ 多くのパラメータ（長い回帰式、多いサブサンプル分割）を推定する場合、大きなVarianceを持つ。 Bias-variance tradeoffを分析者が解くこと（最善のモデル設定を行うこと）は困難です。Chapter 4 で紹介するLASSO/Ridge/Random Forestなどの手法は、bias-varianceのバランスをよりデータ主導型かつ現実的な計算時間で達成することを目指します。 4.2 パッケージ library(tidyverse) library(AER) library(glmnet) library(ranger) 4.3 データの導入 引き続きcausaldataに含まれるclose_collegeを使用 data(&quot;NMES1988&quot;) raw &lt;- na.omit(NMES1988) set.seed(123) 4.4 データ分割 ここでは5個のデータに分割する。 group &lt;- sample(1:5, size = nrow(raw), replace = TRUE) 4.5 OLS 線形予測関数\\(f(X)=\\beta_0 + \\beta_1X_1+...+\\beta_LX_L\\)を仮定し、最小二乗法にて推定する。 fit &lt;- lm(visits ~ ., data = raw[group != 1,]) coef(fit) ## (Intercept) nvisits ovisits novisits emergency ## 3.531009562 0.255309552 0.071632543 0.115009115 0.354368910 ## hospital healthpoor healthexcellent chronic adllimited ## 1.424010008 1.600521748 -1.568712382 0.831439302 0.349098735 ## regionnortheast regionmidwest regionwest age afamyes ## 0.357607114 -0.357360750 0.355722082 -0.304177310 -0.364846004 ## gendermale marriedyes school income employedyes ## -0.387280327 -0.254584979 0.093203031 -0.005342627 0.541103638 ## insuranceyes medicaidyes ## 1.613683838 1.116443882 予測値の導出 Y.hat &lt;- predict(fit,raw) テストデータへの適合 mean((raw$visits - Y.hat)[group == 1]^2) ## [1] 38.92811 訓練データへの適合 mean((raw$visits - Y.hat)[group != 1]^2) ## [1] 37.57328 4.6 LASSO glmentパッケージ(Friedman et al. 2021)を利用 Y &lt;- raw$visits X &lt;- model.matrix(visits ~ -1 + . + .^2 + I(age^2) + I(school^2) + I(income^2) + I(nvisits^2) + I(ovisits^2) + I(hospital^2), data = raw) cv &lt;- cv.glmnet(x = X[group != 1,], y = Y[group != 1], alpha = 1) fit &lt;- glmnet(x = X[group != 1,], y = Y[group != 1], alpha = 1, lambda = cv$lambda.min) 予測モデルの確認 coef(fit) ## 235 x 1 sparse Matrix of class &quot;dgCMatrix&quot; ## s0 ## (Intercept) 4.189934686 ## nvisits . ## ovisits . ## novisits . ## emergency . ## hospital . ## healthpoor 0.388485676 ## healthaverage . ## healthexcellent . ## chronic 0.555773176 ## adllimited . ## regionnortheast . ## regionmidwest . ## regionwest . ## age . ## afamyes . ## gendermale . ## marriedyes . ## school . ## income . ## employedyes . ## insuranceyes . ## medicaidyes . ## I(age^2) . ## I(school^2) . ## I(income^2) . ## I(nvisits^2) . ## I(ovisits^2) . ## I(hospital^2) . ## nvisits:ovisits 0.030966031 ## nvisits:novisits . ## nvisits:emergency . ## nvisits:hospital 0.110839045 ## nvisits:healthpoor 0.023446950 ## nvisits:healthexcellent . ## nvisits:chronic . ## nvisits:adllimited 0.022998428 ## nvisits:regionnortheast 0.102031001 ## nvisits:regionmidwest . ## nvisits:regionwest . ## nvisits:age . ## nvisits:afamyes . ## nvisits:gendermale . ## nvisits:marriedyes . ## nvisits:school . ## nvisits:income . ## nvisits:employedyes . ## nvisits:insuranceyes 0.062931233 ## nvisits:medicaidyes . ## ovisits:novisits . ## ovisits:emergency . ## ovisits:hospital . ## ovisits:healthpoor . ## ovisits:healthexcellent . ## ovisits:chronic . ## ovisits:adllimited . ## ovisits:regionnortheast . ## ovisits:regionmidwest . ## ovisits:regionwest . ## ovisits:age . ## ovisits:afamyes . ## ovisits:gendermale . ## ovisits:marriedyes . ## ovisits:school . ## ovisits:income . ## ovisits:employedyes . ## ovisits:insuranceyes . ## ovisits:medicaidyes . ## novisits:emergency . ## novisits:hospital . ## novisits:healthpoor . ## novisits:healthexcellent . ## novisits:chronic . ## novisits:adllimited . ## novisits:regionnortheast . ## novisits:regionmidwest . ## novisits:regionwest . ## novisits:age . ## novisits:afamyes . ## novisits:gendermale . ## novisits:marriedyes . ## novisits:school 0.001667268 ## novisits:income . ## novisits:employedyes . ## novisits:insuranceyes . ## novisits:medicaidyes . ## emergency:hospital . ## emergency:healthpoor . ## emergency:healthexcellent . ## emergency:chronic . ## emergency:adllimited . ## emergency:regionnortheast . ## emergency:regionmidwest . ## emergency:regionwest . ## emergency:age . ## emergency:afamyes . ## emergency:gendermale . ## emergency:marriedyes . ## emergency:school . ## emergency:income . ## emergency:employedyes . ## emergency:insuranceyes . ## emergency:medicaidyes . ## hospital:healthpoor . ## hospital:healthexcellent . ## hospital:chronic . ## hospital:adllimited . ## hospital:regionnortheast . ## hospital:regionmidwest . ## hospital:regionwest . ## hospital:age . ## hospital:afamyes . ## hospital:gendermale . ## hospital:marriedyes . ## hospital:school 0.010204698 ## hospital:income . ## hospital:employedyes 0.548612203 ## hospital:insuranceyes 1.035816263 ## hospital:medicaidyes . ## healthpoor:chronic . ## healthexcellent:chronic . ## healthpoor:adllimited . ## healthexcellent:adllimited . ## healthpoor:regionnortheast . ## healthexcellent:regionnortheast . ## healthpoor:regionmidwest . ## healthexcellent:regionmidwest . ## healthpoor:regionwest . ## healthexcellent:regionwest . ## healthpoor:age . ## healthexcellent:age . ## healthpoor:afamyes . ## healthexcellent:afamyes . ## healthpoor:gendermale . ## healthexcellent:gendermale . ## healthpoor:marriedyes . ## healthexcellent:marriedyes . ## healthpoor:school . ## healthexcellent:school . ## healthpoor:income . ## healthexcellent:income . ## healthpoor:employedyes 1.254093720 ## healthexcellent:employedyes . ## healthpoor:insuranceyes . ## healthexcellent:insuranceyes . ## healthpoor:medicaidyes . ## healthexcellent:medicaidyes . ## chronic:adllimited . ## chronic:regionnortheast . ## chronic:regionmidwest . ## chronic:regionwest . ## chronic:age . ## chronic:afamyes . ## chronic:gendermale . ## chronic:marriedyes . ## chronic:school 0.011816478 ## chronic:income . ## chronic:employedyes . ## chronic:insuranceyes . ## chronic:medicaidyes . ## adllimited:regionnortheast . ## adllimited:regionmidwest . ## adllimited:regionwest . ## adllimited:age . ## adllimited:afamyes . ## adllimited:gendermale . ## adllimited:marriedyes . ## adllimited:school . ## adllimited:income . ## adllimited:employedyes . ## adllimited:insuranceyes . ## adllimited:medicaidyes . ## regionnortheast:age . ## regionmidwest:age . ## regionwest:age . ## regionnortheast:afamyes . ## regionmidwest:afamyes . ## regionwest:afamyes . ## regionnortheast:gendermale . ## regionmidwest:gendermale . ## regionwest:gendermale . ## regionnortheast:marriedyes . ## regionmidwest:marriedyes . ## regionwest:marriedyes . ## regionnortheast:school . ## regionmidwest:school . ## regionwest:school . ## regionnortheast:income . ## regionmidwest:income . ## regionwest:income . ## regionnortheast:employedyes . ## regionmidwest:employedyes . ## regionwest:employedyes . ## regionnortheast:insuranceyes . ## regionmidwest:insuranceyes . ## regionwest:insuranceyes . ## regionnortheast:medicaidyes . ## regionmidwest:medicaidyes . ## regionwest:medicaidyes . ## age:afamyes . ## age:gendermale . ## age:marriedyes . ## age:school . ## age:income . ## age:employedyes . ## age:insuranceyes . ## age:medicaidyes . ## afamyes:gendermale . ## afamyes:marriedyes . ## afamyes:school . ## afamyes:income . ## afamyes:employedyes . ## afamyes:insuranceyes . ## afamyes:medicaidyes . ## gendermale:marriedyes . ## gendermale:school . ## gendermale:income . ## gendermale:employedyes . ## gendermale:insuranceyes . ## gendermale:medicaidyes . ## marriedyes:school . ## marriedyes:income . ## marriedyes:employedyes . ## marriedyes:insuranceyes . ## marriedyes:medicaidyes . ## school:income . ## school:employedyes . ## school:insuranceyes . ## school:medicaidyes . ## income:employedyes . ## income:insuranceyes . ## income:medicaidyes . ## employedyes:insuranceyes . ## employedyes:medicaidyes . ## insuranceyes:medicaidyes . 予測値の導出 Y.hat &lt;- predict(fit,X) テストデータへの適合 mean((Y - Y.hat)[group == 1]^2) ## [1] 38.87397 訓練データへの適合 mean((Y - Y.hat)[group != 1]^2) ## [1] 37.32271 4.7 Ridge 引き続きglmentパッケージ(Friedman et al. 2021)を利用 cv &lt;- cv.glmnet(x = X[group != 1,], y = Y[group != 1], alpha = 0) fit &lt;- glmnet(x = X[group != 1,], y = Y[group != 1], alpha = 0, lambda = cv$lambda.min) 予測値の導出 Y.hat &lt;- predict(fit,X) テストデータへの適合 mean((Y - Y.hat)[group == 1]^2) ## [1] 39.6995 訓練データへの適合 mean((Y - Y.hat)[group != 1]^2) ## [1] 35.85782 4.7.1 No penalty library(glmnet) Y &lt;- raw$visits X &lt;- model.matrix(visits ~ -1 + . + .^2 + I(age^2) + I(school^2) + I(income^2), data = raw) fit &lt;- glmnet(x = X[group != 1,], y = Y[group != 1], alpha = 1, lambda = 0) 予測値の導出 Y.hat &lt;- predict(fit,X) テストデータへの適合 mean((Y - Y.hat)[group == 1]^2) ## [1] 132.806 訓練データへの適合 mean((Y - Y.hat)[group != 1]^2) ## [1] 30.72286 4.8 Bagging rangerパッケージ(Wright, Wager, and Probst 2020)を利用 X &lt;- model.matrix(visits ~ -1 + ., data = raw) fit &lt;- ranger(x = X[group != 1,], y = Y[group != 1], num.trees = 2000, mtry = ncol(X)) 予測値の計算 Y.hat &lt;- predict(fit,X)$predictions テストデータへの適合 mean((Y - Y.hat)[group == 1]^2) ## [1] 41.12654 訓練データへの適合 mean((Y - Y.hat)[group != 1]^2) ## [1] 8.307017 4.9 Random Forest 引き続きrangerパッケージ(Wright, Wager, and Probst 2020)を利用 fit &lt;- ranger(x = X[group != 1,], y = Y[group != 1], num.trees = 2000) 予測値の計算 Y.hat &lt;- predict(fit,X)$predictions テストデータへの適合 mean((Y - Y.hat)[group == 1]^2) ## [1] 37.99072 訓練データへの適合 mean((Y - Y.hat)[group != 1]^2) ## [1] 12.29817 "],["比較因果推論.html", "Chapter 5 比較・因果推論 5.1 比較 5.2 因果効果", " Chapter 5 比較・因果推論 Chapter 6 の背後にある問題意識・方針を紹介 5.1 比較 5.1.1 問題設定 条件付きの比較：変数\\(D\\)の値が異なる集団間において、結果変数\\(Y\\)の分布がどの程度異なっているのか、推定する。 その際に、直接的な関心ではない変数群\\(X\\)を”一定”とする。 以下の議論では\\(Y\\)の平均値に焦点を当て、\\(E[Y|D=d,X]-E[Y|D=d&#39;,X]\\)の推定を目指す。 またこの際に点推定量のみならず、信頼区間の推定も行います。 5.1.2 推定上の問題 重回帰は、依然として広く用いられている。とくに”正しい”回帰モデルの定式化が難しい社会科学分野において、重回帰の推定目標を条件付き平均値の線形近似と見做す“Agnostic view” (J. Angrist and Imbens 2002; J. D. Angrist and Pischke 2008)は、重回帰を利用する説得的な理由となっている。 しかしながら以下のような場合、深刻な問題が生じることが知られている。 異なる\\(D\\)グループ間で、\\(X\\)の分布が異なる 多数の\\(X\\)について、条件づける 1の問題を緩和するために、推定の前処理としてマッチングを行うことが有力な方法となる。 2の問題については、伝統的なマッチングの手法の有効性は失われる。 この問題を回避するためにChapter 6 では、LASSOやRandom Forestなどの予測手法の応用を紹介します。 なお\\(X\\)が少数であったとしても、定式化の自由度（高次項や交差項の導入）を持たせた場合、同様の問題が生じます。 5.2 因果効果 5.2.1 問題設定 ある集団の変数\\(D\\)を変化させた場合、結果変数\\(Y\\)の分布がどのように変化するのか、因果効果を推定します。 5.2.2 識別の問題 因果効果を推定する際には、識別条件をまず議論する必要があります。 識別条件：「仮にサンプルサイズが無限大である」場合、どのような仮定の下で因果効果を推定できるか？ 本ページでは以下の仮定に基づき議論していきます。 \\(0&lt;\\Pr[D_i=d|X_i]&lt;1\\): サブグループにおいても、原因変数の値にバリエーションが存在する。 ある個人の結果変数は、他者の原因変数の値に依存しない \\(X\\)が均一のグループ内では、\\(D\\)の値がランダムに決定されている） 以上の仮定のもとで\\(D\\)の因果効果は、\\(E[Y|D=d,X]-E[Y|D=d&#39;,X]\\)によって識別できます。 代替的な識別条件も複数存在 5.2.3 推定の問題 識別条件はしばしば多数の\\(X\\)について、条件づけた平均差の推定を要求されます このような状況では比較の問題と同様に、機械学習の応用が有益となります。 "],["unique.html", "Chapter 6 線形モデルの推定 6.1 パッケージ 6.2 データ 6.3 線形モデルの推定 6.4 マッチング法による修正 6.5 付録：推定結果の表示", " Chapter 6 線形モデルの推定 \\(E[Y|D,X]\\)の線形近似をデータから推定する \\(E[Y|D,X]\\)そのものを推定しているとは解釈しない(J. Angrist and Imbens 2002; J. D. Angrist and Pischke 2008) 典型的には、モデルに関心のあるパラメータを近似モデルに直接埋め込む \\[E[Y|D=d,X=x]=\\underbrace{\\tau}_{Interest\\ parameter}\\times d+\\underbrace{f(x)}_{Nuisance\\ function}\\] - \\(f(X)=\\beta_0 + \\beta_1 X_1 + ...+\\beta_LX_L\\) 点推定だけでなく、信頼区間も推定する。 6.1 パッケージ library(tidyverse) library(AER) library(estimatr) library(MatchIt) 6.2 データ data(&quot;NMES1988&quot;) raw &lt;- na.omit(NMES1988) set.seed(123) 6.3 線形モデルの推定 \\(\\tau(x)=\\tau,f(x)=\\beta_0+\\beta_1x_1+...+\\beta_Lx_L\\)と特定化 サンプル内MSEを最大化するように推定 robust standard errorを計算するためにestimatrパッケージ(Blair et al. 2021)を利用 lm_robust関数で推定 lm_robust(visits ~ insurance + region + age + afam + gender + school + income + employed + married, data = raw) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower ## (Intercept) 4.32086605 1.30928537 3.3001713 9.739642e-04 1.75400683 ## insuranceyes 0.96591490 0.24785140 3.8971533 9.877947e-05 0.48000123 ## regionnortheast 0.34814737 0.30392728 1.1454957 2.520663e-01 -0.24770327 ## regionmidwest -0.40583622 0.25526934 -1.5898354 1.119439e-01 -0.90629278 ## regionwest 0.57163030 0.30418463 1.8792215 6.028038e-02 -0.02472489 ## age 0.04293421 0.15977094 0.2687235 7.881551e-01 -0.27029737 ## afamyes -0.39294341 0.34701206 -1.1323624 2.575439e-01 -1.07326195 ## gendermale -0.46726544 0.22050124 -2.1191057 3.413748e-02 -0.89955902 ## school 0.08475793 0.03108035 2.7270588 6.415540e-03 0.02382479 ## income -0.04678801 0.03712934 -1.2601357 2.076873e-01 -0.11958023 ## employedyes -0.34186375 0.42407955 -0.8061312 4.202108e-01 -1.17327342 ## marriedyes -0.29559842 0.23244624 -1.2716851 2.035523e-01 -0.75131020 ## CI Upper DF ## (Intercept) 6.88772528 4394 ## insuranceyes 1.45182856 4394 ## regionnortheast 0.94399802 4394 ## regionmidwest 0.09462034 4394 ## regionwest 1.16798549 4394 ## age 0.35616578 4394 ## afamyes 0.28737512 4394 ## gendermale -0.03497187 4394 ## school 0.14569108 4394 ## income 0.02600421 4394 ## employedyes 0.48954591 4394 ## marriedyes 0.16011336 4394 線形モデルによる推定は、いくつかの問題がある 異なるグループ間で、\\(X\\)の分布が異なる場合、回帰式の定式化に強く依存する 一般に平均効果ではなく、加重平均が推計される サンプルサイズに比べて、少数のコントロール変数を導入できない 以下ではマッチング法、機械学手法を用いた頑強な推定を目指す 6.3.1 RCTデータへの応用 原因変数が完全にランダム化されている場合、因果効果の識別を目的に回帰分析を応用する必要はない 因果効果の推定の改善、効率性向上、を目的として線形モデルの利用は議論されてきた。(Freedman and others 2008; Freedman 2008) (Lin and others 2013)は、以下のような交差項を導入したモデルを用いることで、平均の差の推定に比べて、漸近的効率性が悪化することはない（同等か改善する）ことを示した \\[E[Y|D,X]=\\beta_{D}\\times D+\\beta_1\\times X_1+...+\\beta_L\\times X_L\\] \\[+\\underbrace{\\beta_{1D}\\times D\\times X_1+...+\\beta_{LD}\\times D\\times X_L}_{交差項}\\] 6.4 マッチング法による修正 回帰を行う事前準備としてマッチング法を利用する 重回帰が持つ関数形への依存度を減らせる (Daniel E. Ho et al. 2007) MathItパッケージ (Daniel E. Ho et al. 2011)を利用 多数のマッチング法が実装されている 6.4.1 Exact matching \\(X\\)が完全に同じサンプル同士をマッチングする 原因変数の分布に偏りがある場合（本例ではコントロールグループが少ない）、少ないグループ内での平均効果(Average treatment effect for treat または control)の推定を目指すことでマッチできないサンプルを減らすことが期待できる。 fit.m &lt;- matchit(insurance ~ region + age + afam + gender + school+ married + employed, data = raw, method = &quot;exact&quot;, estimand = &quot;ATC&quot; ) この例では、incomeもコントロール変数に加えた場合、Exact matching不可能（一つもマッチングできない） マッチング結果の表示 summary(fit.m) ## ## Call: ## matchit(formula = insurance ~ region + age + afam + gender + ## school + married + employed, data = raw, method = &quot;exact&quot;, ## estimand = &quot;ATC&quot;) ## ## Summary of Balance for All Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## regionnortheast 0.1938 0.1766 0.0450 . ## regionmidwest 0.2882 0.1736 0.3026 . ## regionwest 0.1818 0.1787 0.0082 . ## regionother 0.3362 0.4711 -0.2703 . ## age 7.3737 7.5021 -0.1849 0.7752 ## afamno 0.9380 0.6914 0.5340 . ## afamyes 0.0620 0.3086 -0.5340 . ## genderfemale 0.5849 0.6365 -0.1073 . ## gendermale 0.4151 0.3635 0.1073 . ## school 10.9547 7.9827 0.7549 0.7464 ## marriedno 0.4028 0.6315 -0.4740 . ## marriedyes 0.5972 0.3685 0.4740 . ## employedno 0.8857 0.9350 -0.2001 . ## employedyes 0.1143 0.0650 0.2001 . ## eCDF Mean eCDF Max ## regionnortheast 0.0172 0.0172 ## regionmidwest 0.1146 0.1146 ## regionwest 0.0031 0.0031 ## regionother 0.1349 0.1349 ## age 0.0357 0.0936 ## afamno 0.2467 0.2467 ## afamyes 0.2467 0.2467 ## genderfemale 0.0516 0.0516 ## gendermale 0.0516 0.0516 ## school 0.1564 0.3248 ## marriedno 0.2287 0.2287 ## marriedyes 0.2287 0.2287 ## employedno 0.0493 0.0493 ## employedyes 0.0493 0.0493 ## ## ## Summary of Balance for Matched Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## regionnortheast 0.2107 0.2107 -0 . ## regionmidwest 0.2201 0.2201 0 . ## regionwest 0.1384 0.1384 0 . ## regionother 0.4308 0.4308 0 . ## age 7.3296 7.3296 0 0.9998 ## afamno 0.9434 0.9434 0 . ## afamyes 0.0566 0.0566 0 . ## genderfemale 0.6887 0.6887 0 . ## gendermale 0.3113 0.3113 0 . ## school 9.9277 9.9277 0 0.9998 ## marriedno 0.5283 0.5283 0 . ## marriedyes 0.4717 0.4717 0 . ## employedno 0.9560 0.9560 -0 . ## employedyes 0.0440 0.0440 0 . ## eCDF Mean eCDF Max Std. Pair Dist. ## regionnortheast 0 0 0 ## regionmidwest 0 0 0 ## regionwest 0 0 0 ## regionother 0 0 0 ## age 0 0 0 ## afamno 0 0 0 ## afamyes 0 0 0 ## genderfemale 0 0 0 ## gendermale 0 0 0 ## school 0 0 0 ## marriedno 0 0 0 ## marriedyes 0 0 0 ## employedno 0 0 0 ## employedyes 0 0 0 ## ## Percent Balance Improvement: ## Std. Mean Diff. Var. Ratio eCDF Mean eCDF Max ## regionnortheast 100 . 100 100 ## regionmidwest 100 . 100 100 ## regionwest 100 . 100 100 ## regionother 100 . 100 100 ## age 100 99.9 100 100 ## afamno 100 . 100 100 ## afamyes 100 . 100 100 ## genderfemale 100 . 100 100 ## gendermale 100 . 100 100 ## school 100 99.9 100 100 ## marriedno 100 . 100 100 ## marriedyes 100 . 100 100 ## employedno 100 . 100 100 ## employedyes 100 . 100 100 ## ## Sample Sizes: ## Control Treated ## All 985 3421. ## Matched (ESS) 318 338.39 ## Matched 318 624. ## Unmatched 667 2797. ## Discarded 0 0. Sample sizesにて、マッチングできなかったサンプル数（985のコントロールグループ中、667サンプルがマッチングできなかった）が確認できる マッチング結果の図示 sum.m &lt;- summary(fit.m) plot(sum.m, xlim=c(0,2)) マッチング結果を変数として含んだデータを作成 df &lt;- match.data(fit.m) “subclass”: マッチングしたグループ “weights”：マッチング後の推計に用いるウェイト マッチングしたデータを用いた推定 新たに作成されるweight (defaltではweights)を用いた、加重推定で実装 lm_robust(visits ~ insurance, df, weights = weights) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## (Intercept) 4.707547 0.2978972 15.802589 4.605531e-50 4.1229266 5.292168 940 ## insuranceyes 1.481104 0.4842812 3.058355 2.288589e-03 0.5307064 2.431501 940 6.4.2 Coarsened exact matching Coarsened exact matching(Iacus, King, and Porro 2012)の実装 連続変数をカテゴリー変数化することで、マッチングできるサンプルサイズを増やすことが期待できる fit.m &lt;- matchit(insurance ~ region + age + afam + gender + school+ married + employed + income, data = raw, method = &quot;cem&quot;, estimand = &quot;ATC&quot;) マッチング結果 sum.m &lt;- summary(fit.m) sum.m ## ## Call: ## matchit(formula = insurance ~ region + age + afam + gender + ## school + married + employed + income, data = raw, method = &quot;cem&quot;, ## estimand = &quot;ATC&quot;) ## ## Summary of Balance for All Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## regionnortheast 0.1938 0.1766 0.0450 . ## regionmidwest 0.2882 0.1736 0.3026 . ## regionwest 0.1818 0.1787 0.0082 . ## regionother 0.3362 0.4711 -0.2703 . ## age 7.3737 7.5021 -0.1849 0.7752 ## afamno 0.9380 0.6914 0.5340 . ## afamyes 0.0620 0.3086 -0.5340 . ## genderfemale 0.5849 0.6365 -0.1073 . ## gendermale 0.4151 0.3635 0.1073 . ## school 10.9547 7.9827 0.7549 0.7464 ## marriedno 0.4028 0.6315 -0.4740 . ## marriedyes 0.5972 0.3685 0.4740 . ## employedno 0.8857 0.9350 -0.2001 . ## employedyes 0.1143 0.0650 0.2001 . ## income 2.7759 1.6630 0.5889 2.7193 ## eCDF Mean eCDF Max ## regionnortheast 0.0172 0.0172 ## regionmidwest 0.1146 0.1146 ## regionwest 0.0031 0.0031 ## regionother 0.1349 0.1349 ## age 0.0357 0.0936 ## afamno 0.2467 0.2467 ## afamyes 0.2467 0.2467 ## genderfemale 0.0516 0.0516 ## gendermale 0.0516 0.0516 ## school 0.1564 0.3248 ## marriedno 0.2287 0.2287 ## marriedyes 0.2287 0.2287 ## employedno 0.0493 0.0493 ## employedyes 0.0493 0.0493 ## income 0.1920 0.3244 ## ## ## Summary of Balance for Matched Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## regionnortheast 0.1663 0.1663 0.0000 . ## regionmidwest 0.2026 0.2026 0.0000 . ## regionwest 0.1471 0.1471 0.0000 . ## regionother 0.4840 0.4840 0.0000 . ## age 7.3175 7.3117 0.0084 0.9786 ## afamno 0.8486 0.8486 0.0000 . ## afamyes 0.1514 0.1514 -0.0000 . ## genderfemale 0.6652 0.6652 0.0000 . ## gendermale 0.3348 0.3348 0.0000 . ## school 9.2821 9.2601 0.0056 0.9798 ## marriedno 0.5458 0.5458 0.0000 . ## marriedyes 0.4542 0.4542 0.0000 . ## employedno 0.9659 0.9659 -0.0000 . ## employedyes 0.0341 0.0341 0.0000 . ## income 1.6947 1.4311 0.1395 0.9181 ## eCDF Mean eCDF Max Std. Pair Dist. ## regionnortheast 0.0000 0.0000 0.0000 ## regionmidwest 0.0000 0.0000 0.0000 ## regionwest 0.0000 0.0000 0.0000 ## regionother 0.0000 0.0000 0.0000 ## age 0.0040 0.0237 0.1533 ## afamno 0.0000 0.0000 0.0000 ## afamyes 0.0000 0.0000 0.0000 ## genderfemale 0.0000 0.0000 0.0000 ## gendermale 0.0000 0.0000 0.0000 ## school 0.0018 0.0158 0.0211 ## marriedno 0.0000 0.0000 0.0000 ## marriedyes 0.0000 0.0000 0.0000 ## employedno 0.0000 0.0000 0.0000 ## employedyes 0.0000 0.0000 0.0000 ## income 0.0845 0.1898 0.3971 ## ## Percent Balance Improvement: ## Std. Mean Diff. Var. Ratio eCDF Mean eCDF Max ## regionnortheast 100.0 . 100.0 100.0 ## regionmidwest 100.0 . 100.0 100.0 ## regionwest 100.0 . 100.0 100.0 ## regionother 100.0 . 100.0 100.0 ## age 95.5 91.5 88.8 74.7 ## afamno 100.0 . 100.0 100.0 ## afamyes 100.0 . 100.0 100.0 ## genderfemale 100.0 . 100.0 100.0 ## gendermale 100.0 . 100.0 100.0 ## school 99.3 93.0 98.8 95.1 ## marriedno 100.0 . 100.0 100.0 ## marriedyes 100.0 . 100.0 100.0 ## employedno 100.0 . 100.0 100.0 ## employedyes 100.0 . 100.0 100.0 ## income 76.3 91.5 56.0 41.5 ## ## Sample Sizes: ## Control Treated ## All 985 3421. ## Matched (ESS) 469 438.65 ## Matched 469 1196. ## Unmatched 516 2225. ## Discarded 0 0. 可視化 plot(sum.m, xlim=c(0,2)) Exact matching以外のマッチング法では、マッチングされたサンプル内でも\\(X\\)の違いが残る マッチングされたサンプル内で回帰分析を行うことで、再調整する df &lt;- match.data(fit.m) lm_robust(visits ~ insurance + region + age + afam + gender + school+ married + employed + income, df, weights = weights) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower ## (Intercept) 0.07031894 3.1830746 0.02209152 9.823776e-01 -6.17296408 ## insuranceyes 1.63803136 0.4111893 3.98364310 7.081498e-05 0.83152463 ## regionnortheast 0.37332676 0.6686084 0.55836385 5.766716e-01 -0.93808186 ## regionmidwest -1.01255860 0.4957411 -2.04251498 4.125884e-02 -1.98490525 ## regionwest 1.46720871 0.9811751 1.49535874 1.350117e-01 -0.45726821 ## age 0.54604701 0.4139224 1.31920151 1.872845e-01 -0.26582038 ## afamyes -1.09566719 0.8327555 -1.31571289 1.884529e-01 -2.72903401 ## gendermale -0.77640463 0.5006594 -1.55076411 1.211496e-01 -1.75839805 ## school 0.16064654 0.1041628 1.54226418 1.232008e-01 -0.04365837 ## marriedyes -0.16566757 0.5419170 -0.30570652 7.598666e-01 -1.22858372 ## employedyes -1.47819362 1.1718433 -1.26142599 2.073334e-01 -3.77664729 ## income -0.36310301 0.1778814 -2.04126501 4.138301e-02 -0.71199956 ## CI Upper DF ## (Intercept) 6.31360197 1653 ## insuranceyes 2.44453809 1653 ## regionnortheast 1.68473538 1653 ## regionmidwest -0.04021195 1653 ## regionwest 3.39168562 1653 ## age 1.35791440 1653 ## afamyes 0.53769963 1653 ## gendermale 0.20558879 1653 ## school 0.36495144 1653 ## marriedyes 0.89724858 1653 ## employedyes 0.82026004 1653 ## income -0.01420647 1653 6.4.3 Propensity score with subclassification Coarsened exact matchingでもマッチングできないサンプルが多数出てくる可能性 とくに\\(X\\)が大量にある場合 1次元の距離指標を用いて、マッチングを行う 距離指標としては、Mahalanobis’ Distance、Propensity scoreなど ここではPropensity score \\(p_d(X)\\)を用いる \\[p_d(X)\\equiv \\Pr[D=d|X]\\] 属性\\(X\\)のユニットの中で、原因変数の値が\\(d\\)である人の割合 未知の場合、データから推定する必要がある 推定された傾向スコアを用いたStratification マッチング - ロジットにて傾向スコアを推定 fit.m &lt;- matchit(insurance ~ region + age + afam + gender + school+ married + employed + income, data = raw, method = &quot;subclass&quot;, estimand = &quot;ATC&quot; ) マッチング結果 sum.m &lt;- summary(fit.m) sum.m ## ## Call: ## matchit(formula = insurance ~ region + age + afam + gender + ## school + married + employed + income, data = raw, method = &quot;subclass&quot;, ## estimand = &quot;ATC&quot;) ## ## Summary of Balance for All Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## distance 0.8230 0.6148 0.8783 0.3568 ## regionnortheast 0.1938 0.1766 0.0450 . ## regionmidwest 0.2882 0.1736 0.3026 . ## regionwest 0.1818 0.1787 0.0082 . ## regionother 0.3362 0.4711 -0.2703 . ## age 7.3737 7.5021 -0.1849 0.7752 ## afamno 0.9380 0.6914 0.5340 . ## afamyes 0.0620 0.3086 -0.5340 . ## genderfemale 0.5849 0.6365 -0.1073 . ## gendermale 0.4151 0.3635 0.1073 . ## school 10.9547 7.9827 0.7549 0.7464 ## marriedno 0.4028 0.6315 -0.4740 . ## marriedyes 0.5972 0.3685 0.4740 . ## employedno 0.8857 0.9350 -0.2001 . ## employedyes 0.1143 0.0650 0.2001 . ## income 2.7759 1.6630 0.5889 2.7193 ## eCDF Mean eCDF Max ## distance 0.2750 0.4285 ## regionnortheast 0.0172 0.0172 ## regionmidwest 0.1146 0.1146 ## regionwest 0.0031 0.0031 ## regionother 0.1349 0.1349 ## age 0.0357 0.0936 ## afamno 0.2467 0.2467 ## afamyes 0.2467 0.2467 ## genderfemale 0.0516 0.0516 ## gendermale 0.0516 0.0516 ## school 0.1564 0.3248 ## marriedno 0.2287 0.2287 ## marriedyes 0.2287 0.2287 ## employedno 0.0493 0.0493 ## employedyes 0.0493 0.0493 ## income 0.1920 0.3244 ## ## Summary of Balance Across Subclasses ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## distance 0.6264 0.6148 0.0486 0.9752 ## regionnortheast 0.1752 0.1766 -0.0039 . ## regionmidwest 0.1941 0.1736 0.0542 . ## regionwest 0.1915 0.1787 0.0335 . ## regionother 0.4392 0.4711 -0.0638 . ## age 7.4961 7.5021 -0.0087 0.8894 ## afamno 0.6956 0.6914 0.0092 . ## afamyes 0.3044 0.3086 -0.0092 . ## genderfemale 0.5977 0.6365 -0.0807 . ## gendermale 0.4023 0.3635 0.0807 . ## school 8.0956 7.9827 0.0287 1.0967 ## marriedno 0.6000 0.6315 -0.0653 . ## marriedyes 0.4000 0.3685 0.0653 . ## employedno 0.9157 0.9350 -0.0782 . ## employedyes 0.0843 0.0650 0.0782 . ## income 1.9086 1.6630 0.1300 1.3758 ## eCDF Mean eCDF Max ## distance 0.0133 0.0457 ## regionnortheast 0.0015 0.0015 ## regionmidwest 0.0205 0.0205 ## regionwest 0.0128 0.0128 ## regionother 0.0319 0.0319 ## age 0.0133 0.0339 ## afamno 0.0042 0.0042 ## afamyes 0.0042 0.0042 ## genderfemale 0.0388 0.0388 ## gendermale 0.0388 0.0388 ## school 0.0109 0.0311 ## marriedno 0.0315 0.0315 ## marriedyes 0.0315 0.0315 ## employedno 0.0193 0.0193 ## employedyes 0.0193 0.0193 ## income 0.0622 0.1485 ## ## Percent Balance Improvement: ## Std. Mean Diff. Var. Ratio eCDF Mean eCDF Max ## distance 94.5 -173.3 95.2 89.3 ## regionnortheast 91.3 . 91.3 91.3 ## regionmidwest 82.1 . 82.1 82.1 ## regionwest -309.1 . -309.1 -309.1 ## regionother 76.4 . 76.4 76.4 ## age 95.3 -14.7 62.7 63.8 ## afamno 98.3 . 98.3 98.3 ## afamyes 98.3 . 98.3 98.3 ## genderfemale 24.8 . 24.8 24.8 ## gendermale 24.8 . 24.8 24.8 ## school 96.2 -46.9 93.1 90.4 ## marriedno 86.2 . 86.2 86.2 ## marriedyes 86.2 . 86.2 86.2 ## employedno 60.9 . 60.9 60.9 ## employedyes 60.9 . 60.9 60.9 ## income 77.9 49.4 67.6 54.2 ## ## Sample Sizes: ## Control Treated ## All 985 3421. ## Matched (ESS) 985 999.44 ## Matched 985 3421. ## Unmatched 0 0. ## Discarded 0 0. マッチング結果の図示 plot(sum.m, xlim=c(0,2)) マッチングしたデータを用いた推定 df &lt;- match.data(fit.m) # マッチング結果を含んだ lm_robust(visits ~ insurance + region + age + afam + gender + school+ married + employed, df, weights = weights) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower ## (Intercept) 2.69483196 1.56827266 1.7183440 0.085804312 -0.37977270 ## insuranceyes 0.86429413 0.30326930 2.8499229 0.004393338 0.26973348 ## regionnortheast 0.32880379 0.47161144 0.6971921 0.485719430 -0.59579228 ## regionmidwest -0.72444843 0.38788012 -1.8677122 0.061868702 -1.48488891 ## regionwest 0.36858393 0.43102618 0.8551312 0.392525130 -0.47644456 ## age 0.32472400 0.19637511 1.6535904 0.098282174 -0.06027016 ## afamyes -0.73188348 0.46736086 -1.5659923 0.117422424 -1.64814626 ## gendermale -1.02017368 0.34142463 -2.9879909 0.002823707 -1.68953801 ## school 0.05542150 0.04126024 1.3432182 0.179270695 -0.02546936 ## marriedyes -0.07195191 0.30991060 -0.2321699 0.816416863 -0.67953285 ## employedyes -0.54902900 0.45865317 -1.1970461 0.231353145 -1.44822033 ## CI Upper DF ## (Intercept) 5.76943662 4395 ## insuranceyes 1.45885478 4395 ## regionnortheast 1.25339987 4395 ## regionmidwest 0.03599205 4395 ## regionwest 1.21361243 4395 ## age 0.70971816 4395 ## afamyes 0.18437930 4395 ## gendermale -0.35080936 4395 ## school 0.13631236 4395 ## marriedyes 0.53562902 4395 ## employedyes 0.35016234 4395 6.4.4 Nearest neighbor matching 傾向スコアを用いた最近旁マッチング 傾向スコアがもっとも似ているサンプルとマッチングする デフォルトでは、Replacement無しのマッチングを行う fit.m &lt;- matchit(insurance ~ region + age + afam + gender + school+ married + employed + income, data = raw, method = &quot;nearest&quot;, estimand = &quot;ATC&quot; ) マッチング結果 sum.m &lt;- summary(fit.m) sum.m ## ## Call: ## matchit(formula = insurance ~ region + age + afam + gender + ## school + married + employed + income, data = raw, method = &quot;nearest&quot;, ## estimand = &quot;ATC&quot;) ## ## Summary of Balance for All Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## distance 0.8230 0.6148 0.8783 0.3568 ## regionnortheast 0.1938 0.1766 0.0450 . ## regionmidwest 0.2882 0.1736 0.3026 . ## regionwest 0.1818 0.1787 0.0082 . ## regionother 0.3362 0.4711 -0.2703 . ## age 7.3737 7.5021 -0.1849 0.7752 ## afamno 0.9380 0.6914 0.5340 . ## afamyes 0.0620 0.3086 -0.5340 . ## genderfemale 0.5849 0.6365 -0.1073 . ## gendermale 0.4151 0.3635 0.1073 . ## school 10.9547 7.9827 0.7549 0.7464 ## marriedno 0.4028 0.6315 -0.4740 . ## marriedyes 0.5972 0.3685 0.4740 . ## employedno 0.8857 0.9350 -0.2001 . ## employedyes 0.1143 0.0650 0.2001 . ## income 2.7759 1.6630 0.5889 2.7193 ## eCDF Mean eCDF Max ## distance 0.2750 0.4285 ## regionnortheast 0.0172 0.0172 ## regionmidwest 0.1146 0.1146 ## regionwest 0.0031 0.0031 ## regionother 0.1349 0.1349 ## age 0.0357 0.0936 ## afamno 0.2467 0.2467 ## afamyes 0.2467 0.2467 ## genderfemale 0.0516 0.0516 ## gendermale 0.0516 0.0516 ## school 0.1564 0.3248 ## marriedno 0.2287 0.2287 ## marriedyes 0.2287 0.2287 ## employedno 0.0493 0.0493 ## employedyes 0.0493 0.0493 ## income 0.1920 0.3244 ## ## ## Summary of Balance for Matched Data: ## Means Treated Means Control Std. Mean Diff. Var. Ratio ## distance 0.6835 0.6148 0.2897 0.5687 ## regionnortheast 0.1939 0.1766 0.0453 . ## regionmidwest 0.1878 0.1736 0.0375 . ## regionwest 0.1949 0.1787 0.0424 . ## regionother 0.4234 0.4711 -0.0956 . ## age 7.4870 7.5021 -0.0218 0.8702 ## afamno 0.8010 0.6914 0.2374 . ## afamyes 0.1990 0.3086 -0.2374 . ## genderfemale 0.6173 0.6365 -0.0401 . ## gendermale 0.3827 0.3635 0.0401 . ## school 8.5736 7.9827 0.1501 0.8404 ## marriedno 0.5909 0.6315 -0.0842 . ## marriedyes 0.4091 0.3685 0.0842 . ## employedno 0.9228 0.9350 -0.0494 . ## employedyes 0.0772 0.0650 0.0494 . ## income 1.7858 1.6630 0.0650 0.7674 ## eCDF Mean eCDF Max Std. Pair Dist. ## distance 0.0309 0.1827 0.2898 ## regionnortheast 0.0173 0.0173 0.7800 ## regionmidwest 0.0142 0.0142 0.7130 ## regionwest 0.0162 0.0162 0.7897 ## regionother 0.0477 0.0477 0.9173 ## age 0.0133 0.0365 1.0470 ## afamno 0.1096 0.1096 0.4879 ## afamyes 0.1096 0.1096 0.4879 ## genderfemale 0.0193 0.0193 0.9224 ## gendermale 0.0193 0.0193 0.9224 ## school 0.0318 0.0924 0.7555 ## marriedno 0.0406 0.0406 0.8292 ## marriedyes 0.0406 0.0406 0.8292 ## employedno 0.0122 0.0122 0.5437 ## employedyes 0.0122 0.0122 0.5437 ## income 0.0615 0.1472 0.7354 ## ## Percent Balance Improvement: ## Std. Mean Diff. Var. Ratio eCDF Mean eCDF Max ## distance 67.0 45.2 88.7 57.4 ## regionnortheast -0.6 . -0.6 -0.6 ## regionmidwest 87.6 . 87.6 87.6 ## regionwest -417.6 . -417.6 -417.6 ## regionother 64.6 . 64.6 64.6 ## age 88.2 45.4 62.7 60.9 ## afamno 55.5 . 55.5 55.5 ## afamyes 55.5 . 55.5 55.5 ## genderfemale 62.6 . 62.6 62.6 ## gendermale 62.6 . 62.6 62.6 ## school 80.1 40.6 79.6 71.6 ## marriedno 82.2 . 82.2 82.2 ## marriedyes 82.2 . 82.2 82.2 ## employedno 75.3 . 75.3 75.3 ## employedyes 75.3 . 75.3 75.3 ## income 89.0 73.5 67.9 54.6 ## ## Sample Sizes: ## Control Treated ## All 985 3421 ## Matched 985 985 ## Unmatched 0 2436 ## Discarded 0 0 マッチング結果の図示 plot(sum.m, xlim=c(0,2)) マッチングしたデータを用いた推定 replacement無しの場合ｍマッチングしたペア(subclass)でクラスタリングしたrobust standard errorの利用を推奨 (Abadie and Spiess 2021) df &lt;- match.data(fit.m) # マッチング結果を含んだ lm_robust(visits ~ insurance + region + age + afam + gender + school+ married + employed + income, df, clusters = subclass, weights = weights) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower ## (Intercept) 4.28376769 1.80365512 2.3750481 0.0179117218 0.74034506 ## insuranceyes 0.88089215 0.27930681 3.1538513 0.0016606844 0.33277940 ## regionnortheast 0.11745650 0.43169716 0.2720808 0.7856724490 -0.73071167 ## regionmidwest -1.09402106 0.34563753 -3.1652265 0.0016483956 -1.77317575 ## regionwest 0.67689981 0.41977554 1.6125280 0.1074679565 -0.14780947 ## age 0.15738399 0.21874416 0.7194889 0.4721765473 -0.27238904 ## afamyes -0.65822959 0.31824549 -2.0683077 0.0391049262 -1.28343451 ## gendermale -1.12983896 0.30900225 -3.6564101 0.0002772051 -1.73664207 ## school 0.04179621 0.03992562 1.0468521 0.2957240492 -0.03666544 ## marriedyes 0.26953526 0.28939461 0.9313762 0.3520209096 -0.29877535 ## employedyes -0.28682948 0.69900943 -0.4103371 0.6821000780 -1.66715900 ## income -0.18287346 0.07454076 -2.4533350 0.0158456243 -0.33072080 ## CI Upper DF ## (Intercept) 7.82719031 515.2437 ## insuranceyes 1.42900489 973.5096 ## regionnortheast 0.96562467 498.9836 ## regionmidwest -0.41486638 478.5757 ## regionwest 1.50160909 508.1414 ## age 0.58715703 499.0168 ## afamyes -0.03302466 519.9827 ## gendermale -0.52303586 627.8155 ## school 0.12025787 454.6173 ## marriedyes 0.83784587 621.0176 ## employedyes 1.09350005 162.2410 ## income -0.03502611 102.2246 6.5 付録：推定結果の表示 6.5.1 推計結果表 tidy関数により推定結果data.frameに変化することで、kable関数(knitrパッケージ)による推計結果表の整形、geom_pointrange関数による可視化が可能 点推定値(estimate)、標準誤差(std.error)のみを残した推計結果表 library(knitr) lm_robust(visits ~ insurance + region + age + afam + gender + school, data = raw ) %&gt;% tidy %&gt;% select(term, estimate, std.error) %&gt;% kable(digits = 2) term estimate std.error (Intercept) 3.65 1.23 insuranceyes 0.90 0.25 regionnortheast 0.36 0.30 regionmidwest -0.40 0.25 regionwest 0.55 0.30 age 0.12 0.15 afamyes -0.35 0.34 gendermale -0.63 0.21 school 0.07 0.03 lm_robust(visits ~ insurance + region + age + afam + gender + school, data = raw ) %&gt;% tidy %&gt;% select(term, estimate, std.error) %&gt;% filter(term == &quot;insuranceyes&quot;) %&gt;% kable(digits = 2) term estimate std.error insuranceyes 0.9 0.25 6.5.2 Dot-and-Whisker plotによる可視化 Dot-and-Whisker図により点推定量と信頼区間を可視化 lm_robust(visits ~ insurance + region + age + afam + gender + school, data = raw) %&gt;% tidy %&gt;% filter(term != &quot;(Intercept)&quot; ) %&gt;% ggplot(aes(y = term, x = estimate, xmin = conf.low, xmax = conf.high) ) + geom_pointrange() + geom_vline(xintercept = 0) "],["部分線形モデルの推定.html", "Chapter 7 部分線形モデルの推定 7.1 パッケージ 7.2 データ 7.3 Double selection: rlassoEffect (hdm) 7.4 Double Machine Learning (DoubleML)", " Chapter 7 部分線形モデルの推定 部分線形モデル\\(=\\)線形モデルの一般化 \\[E[Y|D=d,X=x]=\\underbrace{\\tau}_{Interest\\ parameter}\\times d+\\underbrace{f(x)}_{Nuisance\\ function}\\] 部分線形モデルをロビンソン変換(Robinson 1988) \\[Y_i-\\underbrace{E[Y_i|X_i]}_{Nuisance\\ term}=\\tau\\times [D_i-\\underbrace{E[D_i|X_i]}_{Nuisance\\ term}]+u_i\\] \\(E[Y_i|X_i],E[D_i|X_i]\\)を予測関数として推定し、予測誤差間を単回帰すればよい 実際には\\(E[Y_i|X_i],E[D_i|X_i]\\)は未知の関数なので何らかの方法で推定する必要がある。関数の推定なので予測の手法が適用できる。 7.1 パッケージ library(tidyverse) library(AER) library(hdm) library(DoubleML) library(mlr3) library(mlr3learners) library(data.table) 7.2 データ data(&quot;NMES1988&quot;) raw &lt;- na.omit(NMES1988) set.seed(123) 7.3 Double selection: rlassoEffect (hdm) 2重選択法(Belloni, Chernozhukov, and Hansen 2014)を紹介 LASSOにより\\(Y_i,D_i\\)の両方あるいはどちらか一方を予測する上でrelevantな\\(X^c\\)を特定しコントロールする \\(Y_i,D_i\\)どちらの予測にもrelevantではない変数は除外する hdmパッケージ(Spindler, Chernozhukov, and Hansen 2019)を利用 Y &lt;- raw$visits D &lt;- if_else(raw$insurance == &quot;yes&quot;,1,0) X &lt;- model.matrix(~ - 1+ region + age + afam + gender + school + I(age^2) + I(school^2) + region:age + region:afam + region:gender + region:school + age:afam + age:gender + age:school + afam:gender + afam:school + gender:school, raw) fit &lt;- rlassoEffect(x = X, y = Y, d = D, method = &quot;double selection&quot;) 推定結果 summary(fit) ## [1] &quot;Estimates and significance testing of the effect of target variables&quot; ## Estimate. Std. Error t value Pr(&gt;|t|) ## d1 0.8642 0.2452 3.524 0.000425 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 選択されたコントロール変数 fit$selection.index ## regionnortheast regionmidwest ## FALSE TRUE ## regionwest regionother ## FALSE FALSE ## age afamyes ## FALSE FALSE ## gendermale school ## FALSE TRUE ## I(age^2) I(school^2) ## FALSE FALSE ## regionnortheast:age regionmidwest:age ## FALSE FALSE ## regionwest:age regionnortheast:afamyes ## FALSE FALSE ## regionmidwest:afamyes regionwest:afamyes ## FALSE FALSE ## regionnortheast:gendermale regionmidwest:gendermale ## FALSE FALSE ## regionwest:gendermale regionnortheast:school ## FALSE FALSE ## regionmidwest:school regionwest:school ## FALSE FALSE ## age:afamyes age:gendermale ## TRUE FALSE ## age:school afamyes:gendermale ## TRUE FALSE ## afamyes:school gendermale:school ## FALSE FALSE 7.4 Double Machine Learning (DoubleML) Double Machine Learning法(Chernozhukov et al. 2018)を紹介 なんらかの方法（例、OLS、ランダムフォレスト、LASSO）で\\(E[Y|X],E[D|X]\\)の予測関数\\(f_Y(X),f_D(X)\\)を推定し、予測誤差を単回帰 DoubleMLパッケージ(Bach et al. 2021)を利用 X &lt;- model.matrix(~ - 1+ region + age + afam + gender + school, raw) learner &lt;- lrn(&quot;regr.ranger&quot;, num.trees = 100) # Require bigger num.trees in practice ml_g &lt;- learner$clone() ml_m &lt;- learner$clone() obj_dml_data &lt;- double_ml_data_from_matrix(X = X, y = as.numeric(Y), d = as.numeric(D)) dml_plr_obj &lt;- DoubleMLPLR$new(obj_dml_data, ml_g, ml_m, dml_procedure=&quot;dml1&quot;, n_rep = 3) dml_plr_obj$fit() ## INFO [19:53:39.141] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 5/5) ## INFO [19:53:39.277] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 1/5) ## INFO [19:53:39.377] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 3/5) ## INFO [19:53:39.472] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 4/5) ## INFO [19:53:39.564] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 2/5) ## INFO [19:53:39.850] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 5/5) ## INFO [19:53:39.949] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 1/5) ## INFO [19:53:40.036] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 3/5) ## INFO [19:53:40.127] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 4/5) ## INFO [19:53:40.219] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 2/5) ## INFO [19:53:40.393] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 3/5) ## INFO [19:53:40.491] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 1/5) ## INFO [19:53:40.583] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 4/5) ## INFO [19:53:40.673] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 5/5) ## INFO [19:53:40.766] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 2/5) ## INFO [19:53:40.920] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 1/5) ## INFO [19:53:41.012] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 3/5) ## INFO [19:53:41.108] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 4/5) ## INFO [19:53:41.199] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 5/5) ## INFO [19:53:41.291] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 2/5) ## INFO [19:53:41.457] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 3/5) ## INFO [19:53:41.549] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 5/5) ## INFO [19:53:41.646] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 1/5) ## INFO [19:53:41.737] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 2/5) ## INFO [19:53:41.829] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_g&#39; (iter 4/5) ## INFO [19:53:41.983] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 4/5) ## INFO [19:53:42.074] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 1/5) ## INFO [19:53:42.163] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 5/5) ## INFO [19:53:42.261] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 3/5) ## INFO [19:53:42.354] [mlr3] Applying learner &#39;regr.ranger&#39; on task &#39;nuis_m&#39; (iter 2/5) print(dml_plr_obj) ## ================= DoubleMLPLR Object ================== ## ## ## ------------------ Data summary ------------------ ## Outcome variable: y ## Treatment variable(s): d ## Covariates: X1, X2, X3, X4, X5, X6, X7, X8 ## Instrument(s): ## No. Observations: 4406 ## ## ------------------ Score &amp; algorithm ------------------ ## Score function: partialling out ## DML algorithm: dml1 ## ## ------------------ Machine learner ------------------ ## ml_g: regr.ranger ## ml_m: regr.ranger ## ## ------------------ Resampling ------------------ ## No. folds: 5 ## No. repeated sample splits: 3 ## Apply cross-fitting: TRUE ## ## ------------------ Fit summary ------------------ ## [1] &quot;Estimates and significance testing of the effect of target variables&quot; ## Estimate. Std. Error t value Pr(&gt;|t|) ## d 0.9985 0.2435 4.1 4.13e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 "],["条件付き平均効果関数の推定.html", "Chapter 8 条件付き平均効果関数の推定 8.1 パッケージ 8.2 データ 8.3 Casual Forest 8.4 Distribution of predicted individual effects 8.5 Best linear predictors 8.6 Tree presentation", " Chapter 8 条件付き平均効果関数の推定 8.1 パッケージ library(tidyverse) library(AER) library(grf) library(rpart) library(rpart.plot) 8.2 データ data(&quot;NMES1988&quot;) raw &lt;- na.omit(NMES1988) raw &lt;- mutate(raw, no_insurance = if_else(insurance == &quot;no&quot;,1, 0)) Y &lt;- raw$visits D &lt;- raw$no_insurance X &lt;- model.matrix(~ - 1+ region + age + afam + gender + school, raw) set.seed(123) 8.3 Casual Forest fit &lt;- regression_forest(X = X, Y = Y) Y.hat &lt;- predict(fit)$predictions fit &lt;- regression_forest(X = X, Y = D) D.hat &lt;- predict(fit)$predictions fit.CF &lt;- causal_forest(X = X, W = D, Y = Y, Y.hat = Y.hat, W.hat = D.hat) df &lt;- mutate(raw, tau.grf = predict(fit.CF)$predictions) 8.4 Distribution of predicted individual effects ggplot(df, aes(x = tau.grf) ) + geom_histogram() 8.5 Best linear predictors best_linear_projection(fit.CF,X) ## ## Best linear projection of the conditional average treatment effect. ## Confidence intervals are cluster- and heteroskedasticity-robust (HC3): ## ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -0.878656 3.080563 -0.2852 0.77548 ## regionnortheast -1.833887 0.771118 -2.3782 0.01744 * ## regionmidwest -1.143741 0.707519 -1.6166 0.10605 ## regionwest -0.058262 0.850668 -0.0685 0.94540 ## age 0.158464 0.378459 0.4187 0.67545 ## afamyes 0.330666 0.759248 0.4355 0.66321 ## gendermale -0.246440 0.554706 -0.4443 0.65687 ## school -0.083785 0.075749 -1.1061 0.26875 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 8.6 Tree presentation fit &lt;- rpart(tau.grf ~ region + age + afam + gender + school + medicaid, df, control = rpart.control(cp = 0, maxdepth = 2) ) rpart.plot(fit) "],["regression-discontinuity.html", "Chapter 9 Regression-discontinuity 9.1 パッケージ 9.2 Shap disconiniuity", " Chapter 9 Regression-discontinuity 通常、Cutoffの近傍には少数のサンプルしかないので、外挿する必要がある。 polynomial regressionによる局所的外挿は、rdrobustパッケージ (Calonico et al. 2021)により実装できる。 9.1 パッケージ 同パッケージによる実装も含んだ包括的な入門は Cattaneo, Idrobo, and Titiunik (2019b), Cattaneo, Idrobo, and Titiunik (2019a). library(rdrobust) library(rdlocrand) 9.2 Shap disconiniuity Rdrobustに同梱されれいるExample data (Cattaneo, Frandsen, and Titiunik 2015)を使用 選挙における現職効果（現在議席を得ている候補者のほうが選挙で有利になる）を推定 running variable \\(=\\) margin (前回の選挙におけるライバル政党との得票率差) cutoff \\(=\\) 0 (差がない) outcome variable \\(=\\) vote (選挙における得票率) data(&quot;rdrobust_RDsenate&quot;) raw &lt;- rdrobust_RDsenate Y &lt;- raw$vote X &lt;- raw$margin 図示 初期設定では2nd oder local polynominalを利用 (Gelman and Imbens (2019) の推奨) rdplot(y = Y, x = X) 推定結果表 + 標準誤差 fit &lt;- rdrobust(y = Y, x = X) summary(fit) ## Call: rdrobust ## ## Number of Obs. 1297 ## BW type mserd ## Kernel Triangular ## VCE method NN ## ## Number of Obs. 595 702 ## Eff. Number of Obs. 360 323 ## Order est. (p) 1 1 ## Order bias (q) 2 2 ## BW est. (h) 17.754 17.754 ## BW bias (b) 28.028 28.028 ## rho (h/b) 0.633 0.633 ## Unique Obs. 595 665 ## ## ============================================================================= ## Method Coef. Std. Err. z P&gt;|z| [ 95% C.I. ] ## ============================================================================= ## Conventional 7.414 1.459 5.083 0.000 [4.555 , 10.273] ## Robust - - 4.311 0.000 [4.094 , 10.919] ## ============================================================================= 9.2.1 Local Randomization fit &lt;- rdrandinf(Y = Y, R = X) ## ## Selected window = [-100;100] ## ## Running randomization-based test... ## Randomization-based test complete. ## ## ## Number of obs = 1297 ## Order of poly = 0 ## Kernel type = uniform ## Reps = 1000 ## Window =run. var. range ## H0: tau = 0 ## Randomization = fixed margins ## ## Cutoff c = 0.000 Left of c Right of c ## Number of obs 595 702 ## Eff. number of obs 595 702 ## Mean of outcome 40.921 62.622 ## S.d. of outcome 12.171 16.288 ## Window -100.000 100.000 ## ## ================================================================================ ## Finite sample Large sample ## ------------------ ----------------------------- ## Statistic T P&gt;|T| P&gt;|T| Power vs d = 6.085 ## ================================================================================ ## Diff. in means 21.701 0.000 0.000 1.000 ## ================================================================================ fit ## $sumstats ## [,1] [,2] ## [1,] 595.00000 702.00000 ## [2,] 595.00000 702.00000 ## [3,] 40.92053 62.62170 ## [4,] 12.17079 16.28793 ## [5,] -100.00000 100.00000 ## ## $obs.stat ## [1] 21.70118 ## ## $p.value ## [1] 0 ## ## $asy.pvalue ## [1] 2.137598e-165 ## ## $window ## [1] -100 100 "],["panel-data.html", "Chapter 10 Panel data 10.1 パッケージ 10.2 Data 10.3 Two-way fixed effect model in the two-by-two case 10.4 Weighted two-way fixed effect model", " Chapter 10 Panel data 10.1 パッケージ library(tidyverse) library(estimatr) library(AER) library(did) # weighted two-way fixed effect 10.2 Data AERパッケージに含まれるパネルデータPSID7682を利用 595名の回答者について、1976年から1983年までの7期間パネルデータ data(&quot;PSID7682&quot;) data &lt;- PSID7682 %&gt;% group_by(id) %&gt;% mutate(period = as.numeric(year), # yearを連続変数化 treatment.time = if_else(married == &quot;yes&quot;, period, 999), treatment.time = min(treatment.time) ) %&gt;% # 結婚したperiodを作成(結婚しなかったサンプル = 9999) ungroup 記述統計 table(data$treatment.time) ## ## 1 2 3 4 5 6 7 999 ## 3430 21 21 28 14 14 7 630 10.3 Two-way fixed effect model in the two-by-two case 2時点・2グループデータ data %&gt;% filter(period &lt;= 2) %&gt;% filter(treatment.time == 999 | treatment.time == 2) %&gt;% mutate(D = if_else(period &gt;= treatment.time, 1, 0) ) %&gt;% lm_robust(weeks ~ D + factor(period), data = ., clusters = id, fixed_effects = id) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper ## D -1.066667 1.2271177 -0.8692456 0.4713004 -6.0381262 3.904793 ## factor(period)2 1.400000 0.8532526 1.6407803 0.1043726 -0.2953947 3.095395 ## DF ## D 2.135502 ## factor(period)2 89.000000 10.3.1 Two-way fixed effect model 2時点・2グループデータ data %&gt;% filter(treatment.time != 1) %&gt;% mutate(D = if_else(period &gt;= treatment.time, 1, 0) ) %&gt;% lm_robust(weeks ~ D + factor(period), data = ., clusters = id, fixed_effects = id) ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower ## D -1.3441261 0.9883721 -1.3599393 0.19308228 -3.44285296 ## factor(period)2 1.2860226 0.7603302 1.6914001 0.09375711 -0.22175334 ## factor(period)3 1.2006167 0.8110553 1.4803143 0.14182617 -0.40782221 ## factor(period)4 1.6994406 0.8298055 2.0479986 0.04311393 0.05364326 ## factor(period)5 1.1250430 0.8943547 1.2579382 0.21127972 -0.64885674 ## factor(period)6 1.1601692 0.7989700 1.4520811 0.14954881 -0.42458789 ## factor(period)7 0.6872561 0.9249401 0.7430277 0.45917657 -1.14740654 ## CI Upper DF ## D 0.7546008 15.68082 ## factor(period)2 2.7937986 103.92618 ## factor(period)3 2.8090557 103.53046 ## factor(period)4 3.3452379 102.61302 ## factor(period)5 2.8989427 102.23349 ## factor(period)6 2.7449263 101.97890 ## factor(period)7 2.5219188 101.77635 10.4 Weighted two-way fixed effect model fit &lt;- data %&gt;% filter(treatment.time != 1) %&gt;% mutate(id = as.numeric(id), treatment.time = if_else(treatment.time == 999, 0, treatment.time) ) %&gt;% att_gt(yname = &quot;weeks&quot;, tname = &quot;period&quot;, idname = &quot;id&quot;, gname = &quot;treatment.time&quot;, data = ., control_group = 999) fit ## ## Call: ## att_gt(yname = &quot;weeks&quot;, tname = &quot;period&quot;, idname = &quot;id&quot;, gname = &quot;treatment.time&quot;, ## data = ., control_group = 999) ## ## Reference: Callaway, Brantly and Pedro H.C. Sant&#39;Anna. &quot;Difference-in-Differences with Multiple Time Periods.&quot; Forthcoming at the Journal of Econometrics &lt;https://arxiv.org/abs/1803.09015&gt;, 2020. ## ## Group-Time Average Treatment Effects: ## Group Time ATT(g,t) Std. Error [95% Simult. Conf. Band] ## 2 2 -0.9412 1.0440 -4.5379 2.6555 ## 2 3 -2.5455 2.0798 -9.7108 4.6199 ## 2 4 -8.8526 6.9857 -32.9196 15.2144 ## 2 5 -8.2151 8.9253 -38.9641 22.5340 ## 2 6 -1.5055 1.1957 -5.6248 2.6138 ## 2 7 -2.2556 1.8071 -8.4814 3.9703 ## 3 2 -2.3434 0.8775 -5.3666 0.6798 ## 3 3 1.7980 0.6727 -0.5196 4.1155 ## 3 4 0.7228 1.3776 -4.0234 5.4690 ## 3 5 1.0538 0.8617 -1.9150 4.0225 ## 3 6 0.2125 1.3025 -4.2750 4.6999 ## 3 7 1.8111 1.8058 -4.4103 8.0326 ## 4 2 2.5765 5.3594 -15.8876 21.0406 ## 4 3 0.6579 1.8960 -5.8740 7.1898 ## 4 4 -2.7684 1.3150 -7.2988 1.7620 ## 4 5 -1.0860 1.8005 -7.2889 5.1168 ## 4 6 -6.8489 7.7247 -33.4617 19.7639 ## 4 7 0.5833 1.0646 -3.0844 4.2510 ## 5 2 -1.3000 0.7962 -4.0429 1.4429 ## 5 3 -0.8866 0.9688 -4.2244 2.4512 ## 5 4 -0.2742 0.6891 -2.6483 2.0999 ## 5 5 -0.3118 0.8798 -3.3429 2.7193 ## 5 6 -3.4286 5.7233 -23.1462 16.2890 ## 5 7 0.5222 0.6847 -1.8368 2.8813 ## 6 2 -5.3800 2.3431 -13.4524 2.6924 ## 6 3 -7.5206 2.1083 -14.7841 -0.2571 * ## 6 4 4.8333 3.1020 -5.8537 15.5204 ## 6 5 6.3242 3.2352 -4.8217 17.4701 ## 6 6 -6.2527 2.2240 -13.9148 1.4093 ## 6 7 -2.3222 1.0213 -5.8409 1.1965 ## 7 2 -1.2871 0.7780 -3.9675 1.3932 ## 7 3 0.1327 0.6173 -1.9942 2.2595 ## 7 4 -1.7872 0.5534 -3.6937 0.1192 ## 7 5 1.7065 0.5015 -0.0212 3.4343 ## 7 6 -2.2778 0.6086 -4.3745 -0.1811 * ## 7 7 0.9556 0.5151 -0.8189 2.7300 ## --- ## Signif. codes: `*&#39; confidence band does not cover 0 ## ## P-value for pre-test of parallel trends assumption: 0 ## Control Group: , Anticipation Periods: 0 ## Estimation Method: Doubly Robust aggte(fit, type = &quot;simple&quot;) %&gt;% summary ## ## Call: ## aggte(MP = fit, type = &quot;simple&quot;) ## ## Reference: Callaway, Brantly and Pedro H.C. Sant&#39;Anna. &quot;Difference-in-Differences with Multiple Time Periods.&quot; Forthcoming at the Journal of Econometrics &lt;https://arxiv.org/abs/1803.09015&gt;, 2020. ## ## ## Overall ATT: ## ATT Std. Error [95% Conf. Int.] ## -1.9877 1.1881 -4.3164 0.3409 ## ## ## --- ## Signif. codes: `*&#39; confidence band does not cover 0 ## ## Control Group: , Anticipation Periods: 0 ## Estimation Method: Doubly Robust aggte(fit, type = &quot;dynamic&quot;) %&gt;% ggdid "],["references.html", "References", " References Abadie, Alberto, and Jann Spiess. 2021. “Robust Post-Matching Inference.” Journal of the American Statistical Association, 1–13. Angrist, J, and G Imbens. 2002. “[Covariance Adjustment in Randomized Experiments and Observational Studies]: Comment.” Statistical Science 17 (3): 304–7. Angrist, Joshua D, and Jörn-Steffen Pischke. 2008. Mostly Harmless Econometrics: An Empiricist’s Companion. Princeton university press. Bach, Philipp, Victor Chernozhukov, Malte S. Kurz, and Martin Spindler. 2021. DoubleML: Double Machine Learning in r. https://CRAN.R-project.org/package=DoubleML. Belloni, Alexandre, Victor Chernozhukov, and Christian Hansen. 2014. “Inference on Treatment Effects After Selection Among High-Dimensional Controls.” The Review of Economic Studies 81 (2): 608–50. Blair, Graeme, Jasper Cooper, Alexander Coppock, Macartan Humphreys, and Luke Sonnet. 2021. Estimatr: Fast Estimators for Design-Based Inference. https://CRAN.R-project.org/package=estimatr. Calonico, Sebastian, Matias D. Cattaneo, Max H. Farrell, and Rocio Titiunik. 2021. Rdrobust: Robust Data-Driven Statistical Inference in Regression-Discontinuity Designs. https://CRAN.R-project.org/package=rdrobust. Cattaneo, Matias D, Brigham R Frandsen, and Rocio Titiunik. 2015. “Randomization Inference in the Regression Discontinuity Design: An Application to Party Advantages in the US Senate.” Journal of Causal Inference 3 (1): 1–24. Cattaneo, Matias D, Nicolás Idrobo, and Rocıo Titiunik. 2019a. A Practical Introduction to Regression Discontinuity Designs: Extensions. Cambridge University Press. ———. 2019b. A Practical Introduction to Regression Discontinuity Designs: Foundations. Cambridge University Press. Chernozhukov, Victor, Denis Chetverikov, Mert Demirer, Esther Duflo, Christian Hansen, Whitney Newey, and James Robins. 2018. “Double/Debiased Machine Learning for Treatment and Structural Parameters: Double/Debiased Machine Learning.” The Econometrics Journal 21 (1). Freedman, David A. 2008. “On Regression Adjustments to Experimental Data.” Advances in Applied Mathematics 40 (2): 180–93. Freedman, David A, and others. 2008. “On Regression Adjustments in Experiments with Several Treatments.” Annals of Applied Statistics 2 (1): 176–96. Friedman, Jerome, Trevor Hastie, Rob Tibshirani, Balasubramanian Narasimhan, Kenneth Tay, and Noah Simon. 2021. Glmnet: Lasso and Elastic-Net Regularized Generalized Linear Models. https://CRAN.R-project.org/package=glmnet. Gelman, Andrew, and Guido Imbens. 2019. “Why High-Order Polynominals Should Not Be Used in Regression Discontinuity Designs.” Journal of Business and Econmomic Statistics 37 (3): 447–56. Ho, Daniel E., Kosuke Imai, Gary King, and Elizabeth A. Stuart. 2011. “MatchIt: Nonparametric Preprocessing for Parametric Causal Inference.” Journal of Statistical Software 42 (8): 1–28. https://www.jstatsoft.org/v42/i08/. Ho, Daniel E, Kosuke Imai, Gary King, and Elizabeth A Stuart. 2007. “Matching as Nonparametric Preprocessing for Reducing Model Dependence in Parametric Causal Inference.” Political Analysis 15 (3): 199–236. Iacus, Stefano M, Gary King, and Giuseppe Porro. 2012. “Causal Inference Without Balance Checking: Coarsened Exact Matching.” Political Analysis, 1–24. ———. 2012. “Causal Inference Without Balance Checking: Coarsened Exact Matching.” Political Analysis, 1–24. James, Gareth, Daniela Witten, Trevor Hastie, and Robert Tibshirani. 2013. An Introduction to Statistical Learning. Vol. 112. Springer. Kleiber, Christian, and Achim Zeileis. 2008. Applied Econometrics with R. New York: Springer-Verlag. https://CRAN.R-project.org/package=AER. Lin, Winston, and others. 2013. “Agnostic Notes on Regression Adjustments to Experimental Data: Reexamining Freedman’s Critique.” Annals of Applied Statistics 7 (1): 295–318. Robinson, Peter. 1988. “Root-n-Consistent Semiparametric Regression.” Econometrica 56 (4): 931–54. Sjoberg, Daniel D., Michael Curry, Margie Hannum, Joseph Larmarange, Karissa Whiting, and Emily C. Zabor. 2021. Gtsummary: Presentation-Ready Data Summary and Analytic Result Tables. https://CRAN.R-project.org/package=gtsummary. Spindler, Martin, Victor Chernozhukov, and Christian Hansen. 2019. Hdm: High-Dimensional Metrics. https://CRAN.R-project.org/package=hdm. Wickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy D’Agostino McGowan, Romain Francois, Garrett Grolemund, et al. 2019. “Welcome to the tidyverse.” Journal of Open Source Software 4 (43): 1686. https://doi.org/10.21105/joss.01686. Wickham, Hadley, Winston Chang, Lionel Henry, Thomas Lin Pedersen, Kohske Takahashi, Claus Wilke, Kara Woo, Hiroaki Yutani, and Dewey Dunnington. 2020. Ggplot2: Create Elegant Data Visualisations Using the Grammar of Graphics. https://CRAN.R-project.org/package=ggplot2. Wright, Marvin N., Stefan Wager, and Philipp Probst. 2020. Ranger: A Fast Implementation of Random Forests. https://github.com/imbs-hl/ranger. "]]
